// ☷ ~/config/lily58.keymap
// separate project now but i want to integrate it in lithos somehow in the future
// scripture must be renamed to kjarra related somehow in the future too

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/pointing.h>

#define _ &none // to show where there is no buttons

// LGUI      LALT      LCTRL     LSHFT     DOWN      LEFT      ESC       ENTER     BSPC      DEL       TAB                        
// RGUI      RALT      RCTRL     RSHFT     UP        RIGHT

// LPAR  (   RPAR  )   DLLR  $   DOT   .   COMMA ,   EQUAL =   LBRC  {   RBRC  }   FSLH  /   LT    <   GT    >
// BSLH  \   LBKT  [   RBKT  ]   QMARK ?   AMPS  &   PIPE  |   EXCL  !   SQT   '   GRAVE `   COLON :   MINUS -
// TILDE ~   UNDER _   DQT   "   PLUS  +   SEMI  ;   CARET ^   ASTRK *   AT    @   HASH  #   PRCNT % 

 / {
    keymap {
        compatible = "zmk,keymap";
        l0_main {
            bindings = <
_       &td_X    &kp DOT  _       _          _                _         _       _           &kp QMARK  &kp Z      _
&td_N   _        &kp V    &kp M   &altb 0 0  _                _         &kp TAB &kp BSPC    &kp Q      _          &td_Y
_       &kp H    &td_C    &td_W   &td_T      &kp ESC          &kp ENTER &kp E   &kp SPACE   &td_P      &kp I      _
_       &td_L    &td_F    &kp K   &td_D      _         _ _    _         &kp U   &td_B       &kp G      &kp J      _
                          _       &td_R      &td_S     _ _    &kp O     &td_A   _
            >;
        };
        l1_numbers {
            bindings = <
  _     &none       &none        _          _          _                      _         _         _      &none      &none     _
&none     _         &none      &none      &none        _                      _       &kp N7    &kp N8   &kp N9       _     &none
  _     &none       &none      &none      &none      &none                  &none     &kp N4    &kp N5   &kp N6     &none     _
  _     &none       &none      &none      &none        _        _      _      _       &kp N1    &kp N2   &kp N3     &none     _
                                 _        &none      &none      _      _    &kp N0    &none       _
            >;
        };
//         layer_4 {
//             bindings = <
// &none       _     &none     &none     &none       _                        _     &none     &none     &none     _       &none 
// &none     &none   &none     &none     &none     &none                    &none   &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT &none 
//   _         _     &none     &none     &none       _        _       _       _     &none     &none     &none     _        _
//                               _       &none     &none    &none   &none   &none   &none       _
//             >;
//         };
//         layer_5 {
//             bindings = <
// &none  _    &none &none &none   _                 _   &none               &mkp MB1            &mkp MB2             _              &none
// &none &none &none &none &none &none             &none &mmv MOVE_LEFT      &mmv MOVE_DOWN      &mmv MOVE_UP       &mmv MOVE_RIGHT  &none
// &none &none &none &none &none   _                 _   &none               &msc SCRL_DOWN      &msc SCRL_UP       &none            &none
//   _     _   &none &none &none   _     _     _     _   &none               &none               &none                _                _
//                     _   &none &mo 6 &none &none &none &none                 _
//             >;
//         };
    };
    macros {
        alt_tab_tap: alt_tab_tap {
            compatible = "zmk,behavior-macro";
            label = "Alt‑Tab Tap";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <20>;
            bindings = <&macro_press &kp LALT>, <&macro_tap &kp TAB>, <&macro_release &kp LALT>;
        };
        alt_tab_hold: alt_tab_hold {
            compatible = "zmk,behavior-macro";
            label = "Alt‑Tab Hold";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <20>;
            bindings = <&macro_press &kp LALT>, <&macro_tap &kp TAB>, <&macro_pause_for_release>, <&macro_release &kp LALT>;
        };
    };
    behaviors {
        altb: alt_tab {
            compatible = "zmk,behavior-hold-tap";
            label = "Alt-Tab Key";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&alt_tab_hold>, <&alt_tab_tap>;
        };
        td_N: tap_dance_n { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; bindings = <&kp N>, <&kp LC(Z)>; };
        td_Y: tap_dance_y { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; bindings = <&kp Y>, <&kp LC(LS(Z))>; };
        td_C: tap_dance_c { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; bindings = <&kp C>, <&kp LC(C)>; };
        td_A: tap_dance_a { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; bindings = <&kp A>, <&kp LC(A)>; };
        td_P: tap_dance_p { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; bindings = <&kp P>, <&kp LC(V)>; };
        td_D: tap_dance_d { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; bindings = <&kp D>, <&kp LC(LS(I))>; };
        td_B: tap_dance_b { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; bindings = <&kp B>, <&kp LC(LS(T))>; };
        td_W: tap_dance_w { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; bindings = <&kp W>, <&kp LC(W)>; };
        td_X: tap_dance_x { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; bindings = <&kp X>, <&kp LC(X)>; };
        td_L: tap_dance_l { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; bindings = <&kp L>, <&kp LC(L)>; };
        td_F: tap_dance_f { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; bindings = <&kp F>, <&kp LC(F)>; };
        td_R: tap_dance_r { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; bindings = <&kp R>, <&kp LC(R)>; };
        td_S: tap_dance_s { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; bindings = <&kp S>, <&kp LC(S)>; };
        td_T: tap_dance_t { compatible = "zmk,behavior-tap-dance"; #binding-cells = <0>; bindings = <&kp T>, <&kp LC(T)>; };
    };
//    combos {
//        compatible = "zmk,combos";
//        mouse_abs { key-positions = <3 53>; slow-release; bindings = <&mo 4>; };
//        mouse_abs { key-positions = <8 54>; slow-release; bindings = <&mo 4>; };
//    };
};
