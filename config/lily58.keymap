// ☷ ~/config/lily58.keymap
// separate project now but i want to integrate it in lithos somehow in the future
// scripture must be renamed to kjarra related somehow in the future too

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1000  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#define _ &none // to show where there is no buttons

// LGUI      LALT      LCTRL     LSHFT     DOWN      LEFT      ESC       ENTER     BSPC      DEL       TAB                        
// RGUI      RALT      RCTRL     RSHFT     UP        RIGHT

// DOT   .   COMMA ,   QMARK ?   EXCL  !
// LPAR  (   RPAR  )   LBKT  [   RBKT  ]   LBRC  {   RBRC  }
// GRAVE `   SQT   '   DQT   "   BSLH  \

// DLLR  $   EQUAL =   FSLH  /   LT    <   GT    >
// AMPS  &   PIPE  |   COLON :   MINUS -
// TILDE ~   UNDER _   PLUS  +   SEMI  ;   CARET ^   ASTRK *   AT    @   HASH  #   PRCNT % 

 / {
    keymap {
        compatible = "zmk,keymap";
        l0_main {
            bindings = <
_     &td_X &td_DOT _       _         _           _           _       _         &td_QMARK &kp Z _
&td_L _     &lt 3 V &lt 2 M &altb 0 0 _           _           &kp TAB &td_BSPC  &lt 6 Q     _     &kp J
_     &kp H &td_C   &td_W   &td_T     &td_ESC     &kp ENTER   &kp E   &kp SPACE &td_P     &kp I _
_     &td_N &td_F   &kp K   &td_D     _       _ _ _           &kp U   &td_B     &kp G     &td_Y _
                    _       &td_R     &td_S   _ _ &mt LSHFT O &td_A   _
            >;
        };
        l1_Numbers {
            bindings = <
_     &none &none _     _     _         _      _      _      &none  &none _
&none _     &none &none &none _         _      &kp N7 &kp N8 &kp N9 _     &none
_     &none &none &none &none &none     &none  &kp N4 &kp N5 &kp N6 &none _
_     &none &none &none &none _     _ _ _      &kp N1 &kp N2 &kp N3 &none _
                  _     &none &none _ _ &kp N0 &none  _
            >;
        };
        l2_Mouse {
            bindings = <
_     &none &none _     _     _         _         _              _              &none        &none           _
&none _     &none &none &none _         _         &none          &msc SCRL_DOWN &msc SCRL_UP _               &none
_     &none &none &none &none &none     &none     &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT _
_     &none &none &none &none _     _ _ _         &none          &none          &none        &none           _
                  _     &none &none _ _ &mkp MB2  &mkp MB1       _
            >;
        };
        l3_Volume {
            bindings = <
_     &none &none _     _     _         _          _     _                    &none                &none _
&none _     &none &none &none _         _          &none &kp C_BRIGHTNESS_DEC &kp C_BRIGHTNESS_INC _     &none
_     &none &none &none &none &none     &none      &none &kp C_VOLUME_DOWN    &kp C_VOLUME_UP      &none _
_     &none &none &none &none _     _ _ _          &none &none                &none                &none _
                  _     &none &none _ _ &kp C_MUTE &none _
            >;
        };
        l4_Route {
            bindings = <
_     &none &none _     _     _         _     _        _        &none  &none     _
&none _     &none &none &none _         _     &none    &none    &none  _         &none
_     &none &none &none &none &none     &none &kp LEFT &kp DOWN &kp UP &kp RIGHT _
_     &none &none &none &none _     _ _ _     &none    &none    &none  &none     _
                  _     &none &none _ _ &none &none    _
            >;
        };
        l5_Parenthesis {
            bindings = <
_     &none    &none    _        _     _         _     _     _     &none &none _
&none _        &none    &none    &none _         _     &none &none &none _     &none
_     &kp LPAR &kp LBKT &kp LBRC &none &none     &none &none &none &none &none _
_     &kp RPAR &kp RBKT &kp RBRC &none _     _ _ _     &none &none &none &none _
                        _        &none &none _ _ &none &none _
            >;
        };
        l6_Quote {
            bindings = <
_     &none     &none   _       _     _         _     _     _     &none &none _
&none _         &none   &none   &none _         _     &none &none &none _     &none
_     &kp GRAVE &kp SQT &kp DQT &kp BSLH &none &none     &none &none &none &none &none _
_     &none     &none   &none   &none _     _ _ _     &none &none &none &none _
                        _       &none &none _ _ &none &none _
            >;
        };
    };
    macros {
        alt_tab_tap: alt_tab_tap {
            compatible = "zmk,behavior-macro";
            label = "Alt‑Tab Tap";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <20>;
            bindings = <&macro_press &kp LALT>, <&macro_tap &kp TAB>, <&macro_release &kp LALT>;
        };
        alt_tab_hold: alt_tab_hold {
            compatible = "zmk,behavior-macro";
            label = "Alt‑Tab Hold";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <20>;
            bindings = <&macro_press &kp LALT>, <&macro_tap &kp TAB>, <&macro_pause_for_release>, <&macro_release &kp LALT>;
        };
    };
    behaviors {
        altb: alt_tab {
            compatible = "zmk,behavior-hold-tap";
            label = "Alt-Tab Key";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&alt_tab_hold>, <&alt_tab_tap>;
        };
        td_DOT: tap_dance_dot {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp DOT>, <&kp COMMA>;
        };
        td_QMARK: tap_dance_qmark {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp QMARK>, <&kp EXCL>;
        };
        td_ESC: tap_dance_del {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp ESC>, <&kp DEL>;
        };
        td_BSPC: tap_dance_bspc {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp BSPC>, <&kp LC(BSPC)>;
        };
        td_N: tap_dance_n {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&lt 1 N>, <&kp LC(Z)>;
        };
        td_Y: tap_dance_y {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp Y>, <&kp LC(LS(Z))>;
        };
        td_C: tap_dance_c {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp C>, <&kp LC(C)>;
        };
        td_A: tap_dance_a {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp A>, <&kp LC(A)>;
        };
        td_P: tap_dance_p {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&lt 5 P>, <&kp LC(V)>;
        };
        td_D: tap_dance_d {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp D>, <&kp LC(LS(I))>;
        };
        td_B: tap_dance_b {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp B>, <&kp LC(LS(T))>;
        };
        td_W: tap_dance_w {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp W>, <&kp LC(W)>;
        };
        td_X: tap_dance_x {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp X>, <&kp LC(X)>;
        };
        td_L: tap_dance_l {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp L>, <&kp LC(L)>;
        };
        td_F: tap_dance_f {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp F>, <&kp LC(F)>;
        };
        td_R: tap_dance_r {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&lt 4 R>, <&kp LC(R)>;
        };
        td_S: tap_dance_s {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&mt LSHFT S>, <&kp LC(S)>;
        };
        td_T: tap_dance_t {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp T>, <&kp LC(T)>;
        };
    };
//    combos {
//        compatible = "zmk,combos";
//        mouse_abs { key-positions = <3 53>; slow-release; bindings = <&mo 4>; };
//        mouse_abs { key-positions = <8 54>; slow-release; bindings = <&mo 4>; };
//    };
};
