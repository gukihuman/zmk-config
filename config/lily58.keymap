// ☷ ~/config/lily58.keymap
// separate project now but i want to integrate it in lithos somehow in the future
// scripture must be renamed to kjarra related somehow in the future too

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/pointing.h>

#define _ &none // to show where there is no buttons

// LGUI      LALT      LCTRL     LSHFT     DOWN      LEFT      ESC       ENTER     BSPC      DEL       TAB                        
// RGUI      RALT      RCTRL     RSHFT     UP        RIGHT

// LPAR  (   RPAR  )   DLLR  $   DOT   .   COMMA ,   EQUAL =   LBRC  {   RBRC  }   FSLH  /   LT    <   GT    >
// BSLH  \   LBKT  [   RBKT  ]   QMARK ?   AMPS  &   PIPE  |   EXCL  !   SQT   '   GRAVE `   COLON :   MINUS -
// TILDE ~   UNDER _   DQT   "   PLUS  +   SEMI  ;   CARET ^   ASTRK *   AT    @   HASH  #   PRCNT % 

 / {
    keymap {
        compatible = "zmk,keymap";
        layer_0 {
            bindings = <
&mo 3      _      &kp LSHFT  &mo 1     &kp ESC        _                      _      &kp ENTER  &mo 1        &kp RSHFT   _      &mo 3 
&kp N    &kp H    &kp C      &kp W     &kp T        &altb 0 0              &kp TAB  &kp E      &kp SPACE    &kp P     &kp I    &kp Y
&kp V    &kp L    &kp F      &kp M     &kp D          _                      _      &kp U      &kp LC(SEMI) &kp G     &kp J    &kp Q
  _        _      &kp X      &kp K     &kp BSPC       _        _      _      _      &kp DEL    &kp B        &kp Z       _        _
                               _       &kp R        &kp S    &mo 2  &mo 2  &kp A    &kp O        _
            >;
        };        
        layer_1 {
            bindings = <
&none       _     &none      &none     &none        _                       _     &kp PLUS  &kp N0   &kp MINUS    _    &none 
&none     &none   &none      &kp DOWN  &kp UP     &none                   &none   &kp N1    &kp N2   &kp N3     &none  &none
&none     &none   &none      &kp LEFT  &kp RIGHT    _                       _     &kp N4    &kp N5   &kp N6     &mouse_pattern  &none 
  _         _     &none      &none     &none        _       _       _       _     &kp N7    &kp N8   &kp N9       _      _
                               _       &none      &none   &none   &none   &none   &none       _
            >;
        };
        layer_2 {
            bindings = <
&none       _       &none     &none     &none           _                     _       &none    &none         &none       _   &none 
&kp RC(Z) &none     &kp RC(C) &kp RC(W) &kp RC(T)     &none                 &none     &none    &none         &kp LC(V) &none &kp LC(LS(Z))
&none     &kp RC(L) &kp RC(F) &none     &kp RC(RS(I))   _                     _       &none    &kp LC(LS(T)) &none     &none &none 
  _         _       &kp RC(X) &none     &none           _         _     _     _       &none    &none         &none       _     _
                                _       &kp RC(R)     &kp RC(S) &none &none &kp RC(A) &none      _
            >;
        };
        layer_3 {
            bindings = <
&none       _     &none     &none     &none       _                        _     &none    &none   &none      _      &none 
&none     &none   &none     &none     &none     &none                    &none   &none    &none   &none    &none    &none 
&none     &none   &none     &none     &none       _                        _     &none    &none   &none    &none    &none 
  _         _     &none     &none     &none       _        _       _       _     &none    &none   &none      _        _
                              _       &none     &none    &none   &none   &none   &none      _
            >;
        };
    };
    macros {
        alt_tab_tap: alt_tab_tap {
            compatible = "zmk,behavior-macro";
            label = "Alt‑Tab Tap";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <20>;
            bindings = <&macro_press &kp LALT>, <&macro_tap &kp TAB>, <&macro_release &kp LALT>;
        };
        alt_tab_hold: alt_tab_hold {
            compatible = "zmk,behavior-macro";
            label = "Alt‑Tab Hold";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <20>;
            bindings = <&macro_press &kp LALT>, <&macro_tap &kp TAB>, <&macro_pause_for_release>, <&macro_release &kp LALT>;
        };
        mouse_pattern: mouse_pattern {
            compatible = "zmk,behavior-macro";
            label = "Mouse Pattern";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <20>;
            bindings = <&mmv MOVE_HOR(-5000)>, <&mmv MOVE_VERT(-5000)>, <&mmv MOVE_HOR(500)>, <&mmv MOVE_VERT(500)>;
        };
    };
    behaviors {
        altb: alt_tab {
            compatible = "zmk,behavior-hold-tap";
            label = "Alt‑Tab Key";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&alt_tab_hold>, <&alt_tab_tap>;
        };
    };
};
