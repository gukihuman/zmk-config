/* ☷ ~/config/lily58.keymap */

/* ✎ separate project now but i want to integrate it in lithos somehow in the future ⋯ scripture must be renamed to kjarra related somehow in the future too */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/* ❖ general */
#define X &none
#define TIMEOUT 50

/* ❖ 58 key helper ⋯ flat vector */
#define BEHAVIOR( \
    V, S, O, C, N, \
    E, M, P, A, R ) \
    < \
        X   X   X   X   X   X           X   X   X   X   X   X \
        V   X   S   O   X   X           X   X   X   X   X   X \
        X   X   X   X   C   X           X   M   P   A   R   X \
        X   X   X   X   X   X   X   X   X   X   X   X   X   X \
                    X   X   N   X   X   E   X   X \
    >

/* ❖ spells */
#define TELEPORT &kp LA(TAB)
#define TYPE_A &kp A
#define TYPE_B &kp B

/* ❖ behavior */
#define SET_ORDINARY &to 0
#define SET_DANCING  &to 1

/* ❖ sisters positions */
#define V_POS  12 // valistria
#define S_POS  14 // sylanis
#define O_POS  15 // ormarsa
#define C_POS  28 // castello
#define N_POS  52 // nyth
#define E_POS  55 // ellhelume
#define M_POS  31 // milma
#define P_POS  32 // phoxona
#define A_POS  33 // atia
#define R_POS  34 // reyka

/* ❖ single-key (local) */
#define ORDINARY_V X
#define ORDINARY_S X
#define ORDINARY_O X
#define ORDINARY_C X
#define ORDINARY_N X
#define ORDINARY_E X
#define ORDINARY_M X
#define ORDINARY_P TELEPORT
#define ORDINARY_A X
#define ORDINARY_R X
#define DANCING_V  X
#define DANCING_S  X
#define DANCING_O  X
#define DANCING_C  X
#define DANCING_N  X
#define DANCING_E  X
#define DANCING_M  X
#define DANCING_P  X
#define DANCING_A  X
#define DANCING_R  TYPE_A

/* ❖ two-key (local) */
#define ORDINARY_VS X
#define ORDINARY_VO X
#define ORDINARY_VC X
#define ORDINARY_VN X
#define ORDINARY_VE X
#define ORDINARY_VM X
#define ORDINARY_VP X
#define ORDINARY_VA X
#define ORDINARY_VR X
#define ORDINARY_SO X
#define ORDINARY_SC X
#define ORDINARY_SN X
#define ORDINARY_SE X
#define ORDINARY_SM X
#define ORDINARY_SP X
#define ORDINARY_SA X
#define ORDINARY_SR X
#define ORDINARY_OC X
#define ORDINARY_ON X
#define ORDINARY_OE X
#define ORDINARY_OM X
#define ORDINARY_OP X
#define ORDINARY_OA X
#define ORDINARY_OR X
#define ORDINARY_CN X
#define ORDINARY_CE X
#define ORDINARY_CM X
#define ORDINARY_CP X
#define ORDINARY_CA X
#define ORDINARY_CR X
#define ORDINARY_NE X
#define ORDINARY_NM X
#define ORDINARY_NP X
#define ORDINARY_NA X
#define ORDINARY_NR X
#define ORDINARY_EM X
#define ORDINARY_EP X
#define ORDINARY_EA X
#define ORDINARY_ER X
#define ORDINARY_MP X
#define ORDINARY_MA X
#define ORDINARY_MR X
#define ORDINARY_PA X
#define ORDINARY_PR X
#define ORDINARY_AR X
#define DANCING_VS  X
#define DANCING_VO  X
#define DANCING_VC  X
#define DANCING_VN  X
#define DANCING_VE  X
#define DANCING_VM  X
#define DANCING_VP  X
#define DANCING_VA  X
#define DANCING_VR  X
#define DANCING_SO  X
#define DANCING_SC  X
#define DANCING_SN  X
#define DANCING_SE  X
#define DANCING_SM  X
#define DANCING_SP  X
#define DANCING_SA  X
#define DANCING_SR  X
#define DANCING_OC  X
#define DANCING_ON  X
#define DANCING_OE  X
#define DANCING_OM  X
#define DANCING_OP  X
#define DANCING_OA  X
#define DANCING_OR  X
#define DANCING_CN  X
#define DANCING_CE  X
#define DANCING_CM  X
#define DANCING_CP  X
#define DANCING_CA  X
#define DANCING_CR  X
#define DANCING_NE  X
#define DANCING_NM  X
#define DANCING_NP  X
#define DANCING_NA  X
#define DANCING_NR  X
#define DANCING_EM  X
#define DANCING_EP  X
#define DANCING_EA  X
#define DANCING_ER  X
#define DANCING_MP  X
#define DANCING_MA  X
#define DANCING_MR  X
#define DANCING_PA  X
#define DANCING_PR  X
#define DANCING_AR  X

/* ❖ 3-key (global) */
#define VSO X
#define VSC X
#define VSN X
#define VSE X
#define VSM X
#define VSP X
#define VSA X
#define VSR X
#define VOC X
#define VON X
#define VOE X
#define VOM X
#define VOP X
#define VOA X
#define VOR X
#define VCN X
#define VCE X
#define VCM X
#define VCP X
#define VCA X
#define VCR X
#define VNE X
#define VNM X
#define VNP X
#define VNA X
#define VNR X
#define VEM X
#define VEP X
#define VEA X
#define VER X
#define VMP X
#define VMA X
#define VMR X
#define VPA X
#define VPR X
#define VAR X
#define SOC SET_DANCING
#define SON SET_ORDINARY
#define SOE X
#define SOM X
#define SOP X
#define SOA X
#define SOR X
#define SCN X
#define SCE X
#define SCM X
#define SCP X
#define SCA X
#define SCR X
#define SNE X
#define SNM X
#define SNP X
#define SNA X
#define SNR X
#define SEM X
#define SEP X
#define SEA X
#define SER X
#define SMP X
#define SMA X
#define SMR X
#define SPA X
#define SPR X
#define SAR X
#define OCN X
#define OCE X
#define OCM X
#define OCP X
#define OCA X
#define OCR X
#define ONE X
#define ONM X
#define ONP X
#define ONA X
#define ONR X
#define OEM X
#define OEP X
#define OEA X
#define OER X
#define OMP X
#define OMA X
#define OMR X
#define OPA X
#define OPR X
#define OAR X
#define CNE X
#define CNM X
#define CNP X
#define CNA X
#define CNR X
#define CEM X
#define CEP X
#define CEA X
#define CER X
#define CMP X
#define CMA X
#define CMR X
#define CPA X
#define CPR X
#define CAR X
#define NEM X
#define NEP X
#define NEA X
#define NER X
#define NMP X
#define NMA X
#define NMR X
#define NPA X
#define NPR X
#define NAR X
#define EMP X
#define EMA X
#define EMR X
#define EPA X
#define EPR X
#define EAR X
#define MPA X
#define MPR X
#define MAR X
#define PAR X

/* ❖ 4-key (global) */
#define VSOC X
#define VSON X
#define VSOE X
#define VSOM X
#define VSOP X
#define VSOA X
#define VSOR X
#define VSCN X
#define VSCE X
#define VSCM X
#define VSCP X
#define VSCA X
#define VSCR X
#define VSNE X
#define VSNM X
#define VSNP X
#define VSNA X
#define VSNR X
#define VSEM X
#define VSEP X
#define VSEA X
#define VSER X
#define VSMP X
#define VSMA X
#define VSMR X
#define VSPA X
#define VSPR X
#define VSAR X
#define VOCN X
#define VOCE X
#define VOCM X
#define VOCP X
#define VOCA X
#define VOCR X
#define VONE X
#define VONM X
#define VONP X
#define VONA X
#define VONR X
#define VOEM X
#define VOEP X
#define VOEA X
#define VOER X
#define VOMP X
#define VOMA X
#define VOMR X
#define VOPA X
#define VOPR X
#define VOAR X
#define VCNE X
#define VCNM X
#define VCNP X
#define VCNA X
#define VCNR X
#define VCEM X
#define VCEP X
#define VCEA X
#define VCER X
#define VCMP X
#define VCMA X
#define VCMR X
#define VCPA X
#define VCPR X
#define VCAR X
#define VNEM X
#define VNEP X
#define VNEA X
#define VNER X
#define VNMP X
#define VNMA X
#define VNMR X
#define VNPA X
#define VNPR X
#define VNAR X
#define VEMP X
#define VEMA X
#define VEMR X
#define VEPA X
#define VEPR X
#define VEAR X
#define VMPA X
#define VMPR X
#define VMAR X
#define VPAR X
#define SOCN X
#define SOCE X
#define SOCM X
#define SOCP X
#define SOCA X
#define SOCR X
#define SONE X
#define SONM X
#define SONP X
#define SONA X
#define SONR X
#define SOEM X
#define SOEP X
#define SOEA X
#define SOER X
#define SOMP X
#define SOMA X
#define SOMR X
#define SOPA X
#define SOPR X
#define SOAR X
#define SCNE X
#define SCNM X
#define SCNP X
#define SCNA X
#define SCNR X
#define SCEM X
#define SCEP X
#define SCEA X
#define SCER X
#define SCMP X
#define SCMA X
#define SCMR X
#define SCPA X
#define SCPR X
#define SCAR X
#define SNEM X
#define SNEP X
#define SNEA X
#define SNER X
#define SNMP X
#define SNMA X
#define SNMR X
#define SNPA X
#define SNPR X
#define SNAR X
#define SEMP X
#define SEMA X
#define SEMR X
#define SEPA X
#define SEPR X
#define SEAR X
#define SMPA X
#define SMPR X
#define SMAR X
#define SPAR X
#define OCNE X
#define OCNM X
#define OCNP X
#define OCNA X
#define OCNR X
#define OCEM X
#define OCEP X
#define OCEA X
#define OCER X
#define OCMP X
#define OCMA X
#define OCMR X
#define OCPA X
#define OCPR X
#define OCAR X
#define ONEM X
#define ONEP X
#define ONEA X
#define ONER X
#define ONMP X
#define ONMA X
#define ONMR X
#define ONPA X
#define ONPR X
#define ONAR X
#define OEMP X
#define OEMA X
#define OEMR X
#define OEPA X
#define OEPR X
#define OEAR X
#define OMPA X
#define OMPR X
#define OMAR X
#define OPAR X
#define CNEM X
#define CNEP X
#define CNEA X
#define CNER X
#define CNMP X
#define CNMA X
#define CNMR X
#define CNPA X
#define CNPR X
#define CNAR X
#define CEMP X
#define CEMA X
#define CEMR X
#define CEPA X
#define CEPR X
#define CEAR X
#define CMPA X
#define CMPR X
#define CMAR X
#define CPAR X
#define NEMP X
#define NEMA X
#define NEMR X
#define NEPA X
#define NEPR X
#define NEAR X
#define NMPA X
#define NMPR X
#define NMAR X
#define NPAR X
#define EMPA X
#define EMPR X
#define EMAR X
#define EPAR X
#define MPAR X

/* ❖ 5-key (global) */
#define VSOCN X
#define VSOCE X
#define VSOCM X
#define VSOCP X
#define VSOCA X
#define VSOCR X
#define VSONE X
#define VSONM X
#define VSONP X
#define VSONA X
#define VSONR X
#define VSOEM X
#define VSOEP X
#define VSOEA X
#define VSOER X
#define VSOMP X
#define VSOMA X
#define VSOMR X
#define VSOPA X
#define VSOPR X
#define VSOAR X
#define VSCNE X
#define VSCNM X
#define VSCNP X
#define VSCNA X
#define VSCNR X
#define VSCEM X
#define VSCEP X
#define VSCEA X
#define VSCER X
#define VSCMP X
#define VSCMA X
#define VSCMR X
#define VSCPA X
#define VSCPR X
#define VSCAR X
#define VSNEM X
#define VSNEP X
#define VSNEA X
#define VSNER X
#define VSNMP X
#define VSNMA X
#define VSNMR X
#define VSNPA X
#define VSNPR X
#define VSNAR X
#define VSEMP X
#define VSEMA X
#define VSEMR X
#define VSEPA X
#define VSEPR X
#define VSEAR X
#define VSMPA X
#define VSMPR X
#define VSMAR X
#define VSPAR X
#define VOCNE X
#define VOCNM X
#define VOCNP X
#define VOCNA X
#define VOCNR X
#define VOCEM X
#define VOCEP X
#define VOCEA X
#define VOCER X
#define VOCMP X
#define VOCMA X
#define VOCMR X
#define VOCPA X
#define VOCPR X
#define VOCAR X
#define VONEM X
#define VONEP X
#define VONEA X
#define VONER X
#define VONMP X
#define VONMA X
#define VONMR X
#define VONPA X
#define VONPR X
#define VONAR X
#define VOEMP X
#define VOEMA X
#define VOEMR X
#define VOEPA X
#define VOEPR X
#define VOEAR X
#define VOMPA X
#define VOMPR X
#define VOMAR X
#define VOPAR X
#define VCNEM X
#define VCNEP X
#define VCNEA X
#define VCNER X
#define VCNMP X
#define VCNMA X
#define VCNMR X
#define VCNPA X
#define VCNPR X
#define VCNAR X
#define VCEMP X
#define VCEMA X
#define VCEMR X
#define VCEPA X
#define VCEPR X
#define VCEAR X
#define VCMPA X
#define VCMPR X
#define VCMAR X
#define VCPAR X
#define VNEMP X
#define VNEMA X
#define VNEMR X
#define VNEPA X
#define VNEPR X
#define VNEAR X
#define VNMPA X
#define VNMPR X
#define VNMAR X
#define VNPAR X
#define VEMPA X
#define VEMPR X
#define VEMAR X
#define VEPAR X
#define VMPAR X
#define SOCNE X
#define SOCNM X
#define SOCNP X
#define SOCNA X
#define SOCNR X
#define SOCEM X
#define SOCEP X
#define SOCEA X
#define SOCER X
#define SOCMP X
#define SOCMA X
#define SOCMR X
#define SOCPA X
#define SOCPR X
#define SOCAR X
#define SONEM X
#define SONEP X
#define SONEA X
#define SONER X
#define SONMP X
#define SONMA X
#define SONMR X
#define SONPA X
#define SONPR X
#define SONAR X
#define SOEMP X
#define SOEMA X
#define SOEMR X
#define SOEPA X
#define SOEPR X
#define SOEAR X
#define SOMPA X
#define SOMPR X
#define SOMAR X
#define SOPAR X
#define SCNEM X
#define SCNEP X
#define SCNEA X
#define SCNER X
#define SCNMP X
#define SCNMA X
#define SCNMR X
#define SCNPA X
#define SCNPR X
#define SCNAR X
#define SCEMP X
#define SCEMA X
#define SCEMR X
#define SCEPA X
#define SCEPR X
#define SCEAR X
#define SCMPA X
#define SCMPR X
#define SCMAR X
#define SCPAR X
#define SNEMP X
#define SNEMA X
#define SNEMR X
#define SNEPA X
#define SNEPR X
#define SNEAR X
#define SNMPA X
#define SNMPR X
#define SNMAR X
#define SNPAR X
#define SEMPA X
#define SEMPR X
#define SEMAR X
#define SEPAR X
#define SMPAR X
#define OCNEM X
#define OCNEP X
#define OCNEA X
#define OCNER X
#define OCNMP X
#define OCNMA X
#define OCNMR X
#define OCNPA X
#define OCNPR X
#define OCNAR X
#define OCEMP X
#define OCEMA X
#define OCEMR X
#define OCEPA X
#define OCEPR X
#define OCEAR X
#define OCMPA X
#define OCMPR X
#define OCMAR X
#define OCPAR X
#define ONEMP X
#define ONEMA X
#define ONEMR X
#define ONEPA X
#define ONEPR X
#define ONEAR X
#define ONMPA X
#define ONMPR X
#define ONMAR X
#define ONPAR X
#define OEMPA X
#define OEMPR X
#define OEMAR X
#define OEPAR X
#define OMPAR X
#define CNEMP X
#define CNEMA X
#define CNEMR X
#define CNEPA X
#define CNEPR X
#define CNEAR X
#define CNMPA X
#define CNMPR X
#define CNMAR X
#define CNPAR X
#define CEMPA X
#define CEMPR X
#define CEMAR X
#define CEPAR X
#define CMPAR X
#define NEMPA X
#define NEMPR X
#define NEMAR X
#define NEPAR X
#define NMPAR X
#define EMPAR X

//* ❖ 6-key (global) */
#define VSOCNE X
#define VSOCNM X
#define VSOCNP X
#define VSOCNA X
#define VSOCNR X
#define VSOCEM X
#define VSOCEP X
#define VSOCEA X
#define VSOCER X
#define VSOCMP X
#define VSOCMA X
#define VSOCMR X
#define VSOCPA X
#define VSOCPR X
#define VSOCAR X
#define VSONEM X
#define VSONEP X
#define VSONEA X
#define VSONER X
#define VSONMP X
#define VSONMA X
#define VSONMR X
#define VSONPA X
#define VSONPR X
#define VSONAR X
#define VSOEMP X
#define VSOEMA X
#define VSOEMR X
#define VSOEPA X
#define VSOEPR X
#define VSOEAR X
#define VSOMPA X
#define VSOMPR X
#define VSOMAR X
#define VSOPAR X
#define VSCNEM X
#define VSCNEP X
#define VSCNEA X
#define VSCNER X
#define VSCNMP X
#define VSCNMA X
#define VSCNMR X
#define VSCNPA X
#define VSCNPR X
#define VSCNAR X
#define VSCEMP X
#define VSCEMA X
#define VSCEMR X
#define VSCEPA X
#define VSCEPR X
#define VSCEAR X
#define VSCMPA X
#define VSCMPR X
#define VSCMAR X
#define VSCPAR X
#define VSNEMP X
#define VSNEMA X
#define VSNEMR X
#define VSNEPA X
#define VSNEPR X
#define VSNEAR X
#define VSNMPA X
#define VSNMPR X
#define VSNMAR X
#define VSNPAR X
#define VSEMPA X
#define VSEMPR X
#define VSEMAR X
#define VSEPAR X
#define VSMPAR X
#define VOCNEM X
#define VOCNEP X
#define VOCNEA X
#define VOCNER X
#define VOCNMP X
#define VOCNMA X
#define VOCNMR X
#define VOCNPA X
#define VOCNPR X
#define VOCNAR X
#define VOCEMP X
#define VOCEMA X
#define VOCEMR X
#define VOCEPA X
#define VOCEPR X
#define VOCEAR X
#define VOCMPA X
#define VOCMPR X
#define VOCMAR X
#define VOCPAR X
#define VONEMP X
#define VONEMA X
#define VONEMR X
#define VONEPA X
#define VONEPR X
#define VONEAR X
#define VONMPA X
#define VONMPR X
#define VONMAR X
#define VONPAR X
#define VOEMPA X
#define VOEMPR X
#define VOEMAR X
#define VOEPAR X
#define VOMPAR X
#define VCNEMP X
#define VCNEMA X
#define VCNEMR X
#define VCNEPA X
#define VCNEPR X
#define VCNEAR X
#define VCNMPA X
#define VCNMPR X
#define VCNMAR X
#define VCNPAR X
#define VCEMPA X
#define VCEMPR X
#define VCEMAR X
#define VCEPAR X
#define VCMPAR X
#define VNEMPA X
#define VNEMPR X
#define VNEMAR X
#define VNEPAR X
#define VNMPAR X
#define VEMPAR X
#define SOCNEM X
#define SOCNEP X
#define SOCNEA X
#define SOCNER X
#define SOCNMP X
#define SOCNMA X
#define SOCNMR X
#define SOCNPA X
#define SOCNPR X
#define SOCNAR X
#define SOCEMP X
#define SOCEMA X
#define SOCEMR X
#define SOCEPA X
#define SOCEPR X
#define SOCEAR X
#define SOCMPA X
#define SOCMPR X
#define SOCMAR X
#define SOCPAR X
#define SONEMP X
#define SONEMA X
#define SONEMR X
#define SONEPA X
#define SONEPR X
#define SONEAR X
#define SONMPA X
#define SONMPR X
#define SONMAR X
#define SONPAR X
#define SOEMPA X
#define SOEMPR X
#define SOEMAR X
#define SOEPAR X
#define SOMPAR X
#define SCNEMP X
#define SCNEMA X
#define SCNEMR X
#define SCNEPA X
#define SCNEPR X
#define SCNEAR X
#define SCNMPA X
#define SCNMPR X
#define SCNMAR X
#define SCNPAR X
#define SCEMPA X
#define SCEMPR X
#define SCEMAR X
#define SCEPAR X
#define SCMPAR X
#define SNEMPA X
#define SNEMPR X
#define SNEMAR X
#define SNEPAR X
#define SNMPAR X
#define SEMPAR X
#define OCNEMP X
#define OCNEMA X
#define OCNEMR X
#define OCNEPA X
#define OCNEPR X
#define OCNEAR X
#define OCNMPA X
#define OCNMPR X
#define OCNMAR X
#define OCNPAR X
#define OCEMPA X
#define OCEMPR X
#define OCEMAR X
#define OCEPAR X
#define OCMPAR X
#define ONEMPA X
#define ONEMPR X
#define ONEMAR X
#define ONEPAR X
#define ONMPAR X
#define OEMPAR X
#define CNEMPA X
#define CNEMPR X
#define CNEMAR X
#define CNEPAR X
#define CNMPAR X
#define CEMPAR X
#define NEMPAR X

/* ❖ 7-key (global) */
#define VSOCNEM X
#define VSOCNEP X
#define VSOCNEA X
#define VSOCNER X
#define VSOCNMP X
#define VSOCNMA X
#define VSOCNMR X
#define VSOCNPA X
#define VSOCNPR X
#define VSOCNAR X
#define VSOCEMP X
#define VSOCEMA X
#define VSOCEMR X
#define VSOCEPA X
#define VSOCEPR X
#define VSOCEAR X
#define VSOCMPA X
#define VSOCMPR X
#define VSOCMAR X
#define VSOCPAR X
#define VSONEMP X
#define VSONEMA X
#define VSONEMR X
#define VSONEPA X
#define VSONEPR X
#define VSONEAR X
#define VSONMPA X
#define VSONMPR X
#define VSONMAR X
#define VSONPAR X
#define VSOEMPA X
#define VSOEMPR X
#define VSOEMAR X
#define VSOEPAR X
#define VSOMPAR X
#define VSCNEMP X
#define VSCNEMA X
#define VSCNEMR X
#define VSCNEPA X
#define VSCNEPR X
#define VSCNEAR X
#define VSCNMPA X
#define VSCNMPR X
#define VSCNMAR X
#define VSCNPAR X
#define VSCEMPA X
#define VSCEMPR X
#define VSCEMAR X
#define VSCEPAR X
#define VSCMPAR X
#define VSNEMPA X
#define VSNEMPR X
#define VSNEMAR X
#define VSNEPAR X
#define VSNMPAR X
#define VSEMPAR X
#define VOCNEMP X
#define VOCNEMA X
#define VOCNEMR X
#define VOCNEPA X
#define VOCNEPR X
#define VOCNEAR X
#define VOCNMPA X
#define VOCNMPR X
#define VOCNMAR X
#define VOCNPAR X
#define VOCEMPA X
#define VOCEMPR X
#define VOCEMAR X
#define VOCEPAR X
#define VOCMPAR X
#define VONEMPA X
#define VONEMPR X
#define VONEMAR X
#define VONEPAR X
#define VONMPAR X
#define VOEMPAR X
#define VCNEMPA X
#define VCNEMPR X
#define VCNEMAR X
#define VCNEPAR X
#define VCNMPAR X
#define VCEMPAR X
#define VNEMPAR X
#define SOCNEMP X
#define SOCNEMA X
#define SOCNEMR X
#define SOCNEPA X
#define SOCNEPR X
#define SOCNEAR X
#define SOCNMPA X
#define SOCNMPR X
#define SOCNMAR X
#define SOCNPAR X
#define SOCEMPA X
#define SOCEMPR X
#define SOCEMAR X
#define SOCEPAR X
#define SOCMPAR X
#define SONEMPA X
#define SONEMPR X
#define SONEMAR X
#define SONEPAR X
#define SONMPAR X
#define SOEMPAR X
#define SCNEMPA X
#define SCNEMPR X
#define SCNEMAR X
#define SCNEPAR X
#define SCNMPAR X
#define SCEMPAR X
#define SNEMPAR X
#define OCNEMPA X
#define OCNEMPR X
#define OCNEMAR X
#define OCNEPAR X
#define OCNMPAR X
#define OCEMPAR X
#define ONEMPAR X
#define CNEMPAR X

/* ❖ 8-key (global) */
#define VSOCNEMP X
#define VSOCNEMA X
#define VSOCNEMR X
#define VSOCNEPA X
#define VSOCNEPR X
#define VSOCNEAR X
#define VSOCNMPA X
#define VSOCNMPR X
#define VSOCNMAR X
#define VSOCNPAR X
#define VSOCEMPA X
#define VSOCEMPR X
#define VSOCEMAR X
#define VSOCEPAR X
#define VSOCMPAR X
#define VSONEMPA X
#define VSONEMPR X
#define VSONEMAR X
#define VSONEPAR X
#define VSONMPAR X
#define VSOEMPAR X
#define VSCNEMPA X
#define VSCNEMPR X
#define VSCNEMAR X
#define VSCNEPAR X
#define VSCNMPAR X
#define VSCEMPAR X
#define VSNEMPAR X
#define VOCNEMPA X
#define VOCNEMPR X
#define VOCNEMAR X
#define VOCNEPAR X
#define VOCNMPAR X
#define VOCEMPAR X
#define VONEMPAR X
#define VCNEMPAR X
#define SOCNEMPA X
#define SOCNEMPR X
#define SOCNEMAR X
#define SOCNEPAR X
#define SOCNMPAR X
#define SOCEMPAR X
#define SONEMPAR X
#define SCNEMPAR X
#define OCNEMPAR X

/* ❖ 9-key (global) */
#define VSOCNEMPA X
#define VSOCNEMPR X
#define VSOCNEMAR X
#define VSOCNEPAR X
#define VSOCNMPAR X
#define VSOCEMPAR X
#define VSONEMPAR X
#define VSCNEMPAR X
#define VOCNEMPAR X
#define SOCNEMPAR X

/* ❖ 10-key (global) */
#define VSOCNEMPAR X

/ {
    keymap {
        compatible = "zmk,keymap";

        ordinary { \
            bindings = BEHAVIOR( ORDINARY_V, ORDINARY_S, ORDINARY_O, ORDINARY_C, ORDINARY_N, ORDINARY_E, ORDINARY_M, ORDINARY_P, ORDINARY_A, ORDINARY_R );
        };

        dancing { \
            bindings = BEHAVIOR( DANCING_V, DANCING_S, DANCING_O, DANCING_C, DANCING_N, DANCING_E, DANCING_M, DANCING_P, DANCING_A, DANCING_R );
        };
    };

    combos {
        compatible = "zmk,combos";

        /* ❖ 10-key combos (global) */
        vsocnempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <VSOCNEMPAR>;
        };

        /* ❖ 9-key combos (global) */
        vsocnempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS E_POS M_POS P_POS A_POS>;
            bindings = <VSOCNEMPA>;
        };
        vsocnempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS E_POS M_POS P_POS R_POS>;
            bindings = <VSOCNEMPR>;
        };
        vsocnemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS E_POS M_POS A_POS R_POS>;
            bindings = <VSOCNEMAR>;
        };
        vsocnepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS E_POS P_POS A_POS R_POS>;
            bindings = <VSOCNEPAR>;
        };
        vsocnmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS M_POS P_POS A_POS R_POS>;
            bindings = <VSOCNMPAR>;
        };
        vsocempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <VSOCEMPAR>;
        };
        vsonempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <VSONEMPAR>;
        };
        vscnempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <VSCNEMPAR>;
        };
        vocnempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <VOCNEMPAR>;
        };
        socnempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <SOCNEMPAR>;
        };

        /* ❖ 8-key combos (global) */
        vsocnemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS E_POS M_POS P_POS>;
            bindings = <VSOCNEMP>;
        };
        vsocnema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS E_POS M_POS A_POS>;
            bindings = <VSOCNEMA>;
        };
        vsocnemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS E_POS M_POS R_POS>;
            bindings = <VSOCNEMR>;
        };
        vsocnepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS E_POS P_POS A_POS>;
            bindings = <VSOCNEPA>;
        };
        vsocnepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS E_POS P_POS R_POS>;
            bindings = <VSOCNEPR>;
        };
        vsocnear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS E_POS A_POS R_POS>;
            bindings = <VSOCNEAR>;
        };
        vsocnmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS M_POS P_POS A_POS>;
            bindings = <VSOCNMPA>;
        };
        vsocnmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS M_POS P_POS R_POS>;
            bindings = <VSOCNMPR>;
        };
        vsocnmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS M_POS A_POS R_POS>;
            bindings = <VSOCNMAR>;
        };
        vsocnpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS P_POS A_POS R_POS>;
            bindings = <VSOCNPAR>;
        };
        vsocempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS E_POS M_POS P_POS A_POS>;
            bindings = <VSOCEMPA>;
        };
        vsocempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS E_POS M_POS P_POS R_POS>;
            bindings = <VSOCEMPR>;
        };
        vsocemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS E_POS M_POS A_POS R_POS>;
            bindings = <VSOCEMAR>;
        };
        vsocepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS E_POS P_POS A_POS R_POS>;
            bindings = <VSOCEPAR>;
        };
        vsocmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS M_POS P_POS A_POS R_POS>;
            bindings = <VSOCMPAR>;
        };
        vsonempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS E_POS M_POS P_POS A_POS>;
            bindings = <VSONEMPA>;
        };
        vsonempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS E_POS M_POS P_POS R_POS>;
            bindings = <VSONEMPR>;
        };
        vsonemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS E_POS M_POS A_POS R_POS>;
            bindings = <VSONEMAR>;
        };
        vsonepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS E_POS P_POS A_POS R_POS>;
            bindings = <VSONEPAR>;
        };
        vsonmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS M_POS P_POS A_POS R_POS>;
            bindings = <VSONMPAR>;
        };
        vsoempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <VSOEMPAR>;
        };
        vscnempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS E_POS M_POS P_POS A_POS>;
            bindings = <VSCNEMPA>;
        };
        vscnempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS E_POS M_POS P_POS R_POS>;
            bindings = <VSCNEMPR>;
        };
        vscnemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS E_POS M_POS A_POS R_POS>;
            bindings = <VSCNEMAR>;
        };
        vscnepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS E_POS P_POS A_POS R_POS>;
            bindings = <VSCNEPAR>;
        };
        vscnmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS M_POS P_POS A_POS R_POS>;
            bindings = <VSCNMPAR>;
        };
        vscempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <VSCEMPAR>;
        };
        vsnempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <VSNEMPAR>;
        };
        vocnempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS E_POS M_POS P_POS A_POS>;
            bindings = <VOCNEMPA>;
        };
        vocnempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS E_POS M_POS P_POS R_POS>;
            bindings = <VOCNEMPR>;
        };
        vocnemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS E_POS M_POS A_POS R_POS>;
            bindings = <VOCNEMAR>;
        };
        vocnepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS E_POS P_POS A_POS R_POS>;
            bindings = <VOCNEPAR>;
        };
        vocnmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS M_POS P_POS A_POS R_POS>;
            bindings = <VOCNMPAR>;
        };
        vocempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <VOCEMPAR>;
        };
        vonempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <VONEMPAR>;
        };
        vcnempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <VCNEMPAR>;
        };
        socnempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS E_POS M_POS P_POS A_POS>;
            bindings = <SOCNEMPA>;
        };
        socnempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS E_POS M_POS P_POS R_POS>;
            bindings = <SOCNEMPR>;
        };
        socnemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS E_POS M_POS A_POS R_POS>;
            bindings = <SOCNEMAR>;
        };
        socnepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS E_POS P_POS A_POS R_POS>;
            bindings = <SOCNEPAR>;
        };
        socnmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS M_POS P_POS A_POS R_POS>;
            bindings = <SOCNMPAR>;
        };
        socempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <SOCEMPAR>;
        };
        sonempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <SONEMPAR>;
        };
        scnempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <SCNEMPAR>;
        };
        ocnempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <OCNEMPAR>;
        };

        /* ❖ 7-key combos (global) */
        vsocnem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS E_POS M_POS>;
            bindings = <VSOCNEM>;
        };
        vsocnep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS E_POS P_POS>;
            bindings = <VSOCNEP>;
        };
        vsocnea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS E_POS A_POS>;
            bindings = <VSOCNEA>;
        };
        vsocner { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS E_POS R_POS>;
            bindings = <VSOCNER>;
        };
        vsocnmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS M_POS P_POS>;
            bindings = <VSOCNMP>;
        };
        vsocnma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS M_POS A_POS>;
            bindings = <VSOCNMA>;
        };
        vsocnmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS M_POS R_POS>;
            bindings = <VSOCNMR>;
        };
        vsocnpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS P_POS A_POS>;
            bindings = <VSOCNPA>;
        };
        vsocnpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS P_POS R_POS>;
            bindings = <VSOCNPR>;
        };
        vsocnar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS A_POS R_POS>;
            bindings = <VSOCNAR>;
        };
        vsocemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS E_POS M_POS P_POS>;
            bindings = <VSOCEMP>;
        };
        vsocema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS E_POS M_POS A_POS>;
            bindings = <VSOCEMA>;
        };
        vsocemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS E_POS M_POS R_POS>;
            bindings = <VSOCEMR>;
        };
        vsocepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS E_POS P_POS A_POS>;
            bindings = <VSOCEPA>;
        };
        vsocepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS E_POS P_POS R_POS>;
            bindings = <VSOCEPR>;
        };
        vsocear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS E_POS A_POS R_POS>;
            bindings = <VSOCEAR>;
        };
        vsocmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS M_POS P_POS A_POS>;
            bindings = <VSOCMPA>;
        };
        vsocmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS M_POS P_POS R_POS>;
            bindings = <VSOCMPR>;
        };
        vsocmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS M_POS A_POS R_POS>;
            bindings = <VSOCMAR>;
        };
        vsocpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS P_POS A_POS R_POS>;
            bindings = <VSOCPAR>;
        };
        vsonemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS E_POS M_POS P_POS>;
            bindings = <VSONEMP>;
        };
        vsonema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS E_POS M_POS A_POS>;
            bindings = <VSONEMA>;
        };
        vsonemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS E_POS M_POS R_POS>;
            bindings = <VSONEMR>;
        };
        vsonepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS E_POS P_POS A_POS>;
            bindings = <VSONEPA>;
        };
        vsonepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS E_POS P_POS R_POS>;
            bindings = <VSONEPR>;
        };
        vsonear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS E_POS A_POS R_POS>;
            bindings = <VSONEAR>;
        };
        vsonmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS M_POS P_POS A_POS>;
            bindings = <VSONMPA>;
        };
        vsonmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS M_POS P_POS R_POS>;
            bindings = <VSONMPR>;
        };
        vsonmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS M_POS A_POS R_POS>;
            bindings = <VSONMAR>;
        };
        vsonpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS P_POS A_POS R_POS>;
            bindings = <VSONPAR>;
        };
        vsoempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS E_POS M_POS P_POS A_POS>;
            bindings = <VSOEMPA>;
        };
        vsoempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS E_POS M_POS P_POS R_POS>;
            bindings = <VSOEMPR>;
        };
        vsoemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS E_POS M_POS A_POS R_POS>;
            bindings = <VSOEMAR>;
        };
        vsoepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS E_POS P_POS A_POS R_POS>;
            bindings = <VSOEPAR>;
        };
        vsompar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS M_POS P_POS A_POS R_POS>;
            bindings = <VSOMPAR>;
        };
        vscnemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS E_POS M_POS P_POS>;
            bindings = <VSCNEMP>;
        };
        vscnema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS E_POS M_POS A_POS>;
            bindings = <VSCNEMA>;
        };
        vscnemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS E_POS M_POS R_POS>;
            bindings = <VSCNEMR>;
        };
        vscnepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS E_POS P_POS A_POS>;
            bindings = <VSCNEPA>;
        };
        vscnepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS E_POS P_POS R_POS>;
            bindings = <VSCNEPR>;
        };
        vscnear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS E_POS A_POS R_POS>;
            bindings = <VSCNEAR>;
        };
        vscnmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS M_POS P_POS A_POS>;
            bindings = <VSCNMPA>;
        };
        vscnmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS M_POS P_POS R_POS>;
            bindings = <VSCNMPR>;
        };
        vscnmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS M_POS A_POS R_POS>;
            bindings = <VSCNMAR>;
        };
        vscnpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS P_POS A_POS R_POS>;
            bindings = <VSCNPAR>;
        };
        vscempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS E_POS M_POS P_POS A_POS>;
            bindings = <VSCEMPA>;
        };
        vscempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS E_POS M_POS P_POS R_POS>;
            bindings = <VSCEMPR>;
        };
        vscemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS E_POS M_POS A_POS R_POS>;
            bindings = <VSCEMAR>;
        };
        vscepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS E_POS P_POS A_POS R_POS>;
            bindings = <VSCEPAR>;
        };
        vscmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS M_POS P_POS A_POS R_POS>;
            bindings = <VSCMPAR>;
        };
        vsnempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS E_POS M_POS P_POS A_POS>;
            bindings = <VSNEMPA>;
        };
        vsnempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS E_POS M_POS P_POS R_POS>;
            bindings = <VSNEMPR>;
        };
        vsnemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS E_POS M_POS A_POS R_POS>;
            bindings = <VSNEMAR>;
        };
        vsnepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS E_POS P_POS A_POS R_POS>;
            bindings = <VSNEPAR>;
        };
        vsnmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS M_POS P_POS A_POS R_POS>;
            bindings = <VSNMPAR>;
        };
        vsempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <VSEMPAR>;
        };
        vocnemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS E_POS M_POS P_POS>;
            bindings = <VOCNEMP>;
        };
        vocnema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS E_POS M_POS A_POS>;
            bindings = <VOCNEMA>;
        };
        vocnemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS E_POS M_POS R_POS>;
            bindings = <VOCNEMR>;
        };
        vocnepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS E_POS P_POS A_POS>;
            bindings = <VOCNEPA>;
        };
        vocnepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS E_POS P_POS R_POS>;
            bindings = <VOCNEPR>;
        };
        vocnear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS E_POS A_POS R_POS>;
            bindings = <VOCNEAR>;
        };
        vocnmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS M_POS P_POS A_POS>;
            bindings = <VOCNMPA>;
        };
        vocnmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS M_POS P_POS R_POS>;
            bindings = <VOCNMPR>;
        };
        vocnmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS M_POS A_POS R_POS>;
            bindings = <VOCNMAR>;
        };
        vocnpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS P_POS A_POS R_POS>;
            bindings = <VOCNPAR>;
        };
        vocempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS E_POS M_POS P_POS A_POS>;
            bindings = <VOCEMPA>;
        };
        vocempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS E_POS M_POS P_POS R_POS>;
            bindings = <VOCEMPR>;
        };
        vocemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS E_POS M_POS A_POS R_POS>;
            bindings = <VOCEMAR>;
        };
        vocepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS E_POS P_POS A_POS R_POS>;
            bindings = <VOCEPAR>;
        };
        vocmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS M_POS P_POS A_POS R_POS>;
            bindings = <VOCMPAR>;
        };
        vonempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS E_POS M_POS P_POS A_POS>;
            bindings = <VONEMPA>;
        };
        vonempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS E_POS M_POS P_POS R_POS>;
            bindings = <VONEMPR>;
        };
        vonemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS E_POS M_POS A_POS R_POS>;
            bindings = <VONEMAR>;
        };
        vonepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS E_POS P_POS A_POS R_POS>;
            bindings = <VONEPAR>;
        };
        vonmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS M_POS P_POS A_POS R_POS>;
            bindings = <VONMPAR>;
        };
        voempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <VOEMPAR>;
        };
        vcnempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS E_POS M_POS P_POS A_POS>;
            bindings = <VCNEMPA>;
        };
        vcnempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS E_POS M_POS P_POS R_POS>;
            bindings = <VCNEMPR>;
        };
        vcnemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS E_POS M_POS A_POS R_POS>;
            bindings = <VCNEMAR>;
        };
        vcnepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS E_POS P_POS A_POS R_POS>;
            bindings = <VCNEPAR>;
        };
        vcnmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS M_POS P_POS A_POS R_POS>;
            bindings = <VCNMPAR>;
        };
        vcempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <VCEMPAR>;
        };
        vnempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <VNEMPAR>;
        };
        socnemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS E_POS M_POS P_POS>;
            bindings = <SOCNEMP>;
        };
        socnema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS E_POS M_POS A_POS>;
            bindings = <SOCNEMA>;
        };
        socnemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS E_POS M_POS R_POS>;
            bindings = <SOCNEMR>;
        };
        socnepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS E_POS P_POS A_POS>;
            bindings = <SOCNEPA>;
        };
        socnepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS E_POS P_POS R_POS>;
            bindings = <SOCNEPR>;
        };
        socnear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS E_POS A_POS R_POS>;
            bindings = <SOCNEAR>;
        };
        socnmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS M_POS P_POS A_POS>;
            bindings = <SOCNMPA>;
        };
        socnmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS M_POS P_POS R_POS>;
            bindings = <SOCNMPR>;
        };
        socnmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS M_POS A_POS R_POS>;
            bindings = <SOCNMAR>;
        };
        socnpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS P_POS A_POS R_POS>;
            bindings = <SOCNPAR>;
        };
        socempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS E_POS M_POS P_POS A_POS>;
            bindings = <SOCEMPA>;
        };
        socempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS E_POS M_POS P_POS R_POS>;
            bindings = <SOCEMPR>;
        };
        socemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS E_POS M_POS A_POS R_POS>;
            bindings = <SOCEMAR>;
        };
        socepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS E_POS P_POS A_POS R_POS>;
            bindings = <SOCEPAR>;
        };
        socmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS M_POS P_POS A_POS R_POS>;
            bindings = <SOCMPAR>;
        };
        sonempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS E_POS M_POS P_POS A_POS>;
            bindings = <SONEMPA>;
        };
        sonempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS E_POS M_POS P_POS R_POS>;
            bindings = <SONEMPR>;
        };
        sonemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS E_POS M_POS A_POS R_POS>;
            bindings = <SONEMAR>;
        };
        sonepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS E_POS P_POS A_POS R_POS>;
            bindings = <SONEPAR>;
        };
        sonmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS M_POS P_POS A_POS R_POS>;
            bindings = <SONMPAR>;
        };
        soempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <SOEMPAR>;
        };
        scnempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS E_POS M_POS P_POS A_POS>;
            bindings = <SCNEMPA>;
        };
        scnempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS E_POS M_POS P_POS R_POS>;
            bindings = <SCNEMPR>;
        };
        scnemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS E_POS M_POS A_POS R_POS>;
            bindings = <SCNEMAR>;
        };
        scnepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS E_POS P_POS A_POS R_POS>;
            bindings = <SCNEPAR>;
        };
        scnmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS M_POS P_POS A_POS R_POS>;
            bindings = <SCNMPAR>;
        };
        scempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <SCEMPAR>;
        };
        snempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <SNEMPAR>;
        };
        ocnempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS E_POS M_POS P_POS A_POS>;
            bindings = <OCNEMPA>;
        };
        ocnempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS E_POS M_POS P_POS R_POS>;
            bindings = <OCNEMPR>;
        };
        ocnemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS E_POS M_POS A_POS R_POS>;
            bindings = <OCNEMAR>;
        };
        ocnepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS E_POS P_POS A_POS R_POS>;
            bindings = <OCNEPAR>;
        };
        ocnmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS M_POS P_POS A_POS R_POS>;
            bindings = <OCNMPAR>;
        };
        ocempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <OCEMPAR>;
        };
        onempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <ONEMPAR>;
        };
        cnempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <CNEMPAR>;
        };

        /* ❖ 6-key combos (global) */
        vsocne { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS E_POS>;
            bindings = <VSOCNE>;
        };
        vsocnm { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS M_POS>;
            bindings = <VSOCNM>;
        };
        vsocnp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS P_POS>;
            bindings = <VSOCNP>;
        };
        vsocna { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS A_POS>;
            bindings = <VSOCNA>;
        };
        vsocnr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS R_POS>;
            bindings = <VSOCNR>;
        };
        vsocem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS E_POS M_POS>;
            bindings = <VSOCEM>;
        };
        vsocep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS E_POS P_POS>;
            bindings = <VSOCEP>;
        };
        vsocea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS E_POS A_POS>;
            bindings = <VSOCEA>;
        };
        vsocer { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS E_POS R_POS>;
            bindings = <VSOCER>;
        };
        vsocmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS M_POS P_POS>;
            bindings = <VSOCMP>;
        };
        vsocma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS M_POS A_POS>;
            bindings = <VSOCMA>;
        };
        vsocmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS M_POS R_POS>;
            bindings = <VSOCMR>;
        };
        vsocpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS P_POS A_POS>;
            bindings = <VSOCPA>;
        };
        vsocpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS P_POS R_POS>;
            bindings = <VSOCPR>;
        };
        vsocar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS A_POS R_POS>;
            bindings = <VSOCAR>;
        };
        vsonem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS E_POS M_POS>;
            bindings = <VSONEM>;
        };
        vsonep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS E_POS P_POS>;
            bindings = <VSONEP>;
        };
        vsonea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS E_POS A_POS>;
            bindings = <VSONEA>;
        };
        vsoner { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS E_POS R_POS>;
            bindings = <VSONER>;
        };
        vsonmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS M_POS P_POS>;
            bindings = <VSONMP>;
        };
        vsonma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS M_POS A_POS>;
            bindings = <VSONMA>;
        };
        vsonmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS M_POS R_POS>;
            bindings = <VSONMR>;
        };
        vsonpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS P_POS A_POS>;
            bindings = <VSONPA>;
        };
        vsonpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS P_POS R_POS>;
            bindings = <VSONPR>;
        };
        vsonar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS A_POS R_POS>;
            bindings = <VSONAR>;
        };
        vsoemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS E_POS M_POS P_POS>;
            bindings = <VSOEMP>;
        };
        vsoema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS E_POS M_POS A_POS>;
            bindings = <VSOEMA>;
        };
        vsoemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS E_POS M_POS R_POS>;
            bindings = <VSOEMR>;
        };
        vsoepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS E_POS P_POS A_POS>;
            bindings = <VSOEPA>;
        };
        vsoepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS E_POS P_POS R_POS>;
            bindings = <VSOEPR>;
        };
        vsoear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS E_POS A_POS R_POS>;
            bindings = <VSOEAR>;
        };
        vsompa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS M_POS P_POS A_POS>;
            bindings = <VSOMPA>;
        };
        vsompr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS M_POS P_POS R_POS>;
            bindings = <VSOMPR>;
        };
        vsomar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS M_POS A_POS R_POS>;
            bindings = <VSOMAR>;
        };
        vsopar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS P_POS A_POS R_POS>;
            bindings = <VSOPAR>;
        };
        vscnem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS E_POS M_POS>;
            bindings = <VSCNEM>;
        };
        vscnep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS E_POS P_POS>;
            bindings = <VSCNEP>;
        };
        vscnea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS E_POS A_POS>;
            bindings = <VSCNEA>;
        };
        vscner { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS E_POS R_POS>;
            bindings = <VSCNER>;
        };
        vscnmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS M_POS P_POS>;
            bindings = <VSCNMP>;
        };
        vscnma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS M_POS A_POS>;
            bindings = <VSCNMA>;
        };
        vscnmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS M_POS R_POS>;
            bindings = <VSCNMR>;
        };
        vscnpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS P_POS A_POS>;
            bindings = <VSCNPA>;
        };
        vscnpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS P_POS R_POS>;
            bindings = <VSCNPR>;
        };
        vscnar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS A_POS R_POS>;
            bindings = <VSCNAR>;
        };
        vscemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS E_POS M_POS P_POS>;
            bindings = <VSCEMP>;
        };
        vscema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS E_POS M_POS A_POS>;
            bindings = <VSCEMA>;
        };
        vscemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS E_POS M_POS R_POS>;
            bindings = <VSCEMR>;
        };
        vscepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS E_POS P_POS A_POS>;
            bindings = <VSCEPA>;
        };
        vscepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS E_POS P_POS R_POS>;
            bindings = <VSCEPR>;
        };
        vscear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS E_POS A_POS R_POS>;
            bindings = <VSCEAR>;
        };
        vscmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS M_POS P_POS A_POS>;
            bindings = <VSCMPA>;
        };
        vscmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS M_POS P_POS R_POS>;
            bindings = <VSCMPR>;
        };
        vscmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS M_POS A_POS R_POS>;
            bindings = <VSCMAR>;
        };
        vscpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS P_POS A_POS R_POS>;
            bindings = <VSCPAR>;
        };
        vsnemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS E_POS M_POS P_POS>;
            bindings = <VSNEMP>;
        };
        vsnema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS E_POS M_POS A_POS>;
            bindings = <VSNEMA>;
        };
        vsnemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS E_POS M_POS R_POS>;
            bindings = <VSNEMR>;
        };
        vsnepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS E_POS P_POS A_POS>;
            bindings = <VSNEPA>;
        };
        vsnepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS E_POS P_POS R_POS>;
            bindings = <VSNEPR>;
        };
        vsnear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS E_POS A_POS R_POS>;
            bindings = <VSNEAR>;
        };
        vsnmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS M_POS P_POS A_POS>;
            bindings = <VSNMPA>;
        };
        vsnmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS M_POS P_POS R_POS>;
            bindings = <VSNMPR>;
        };
        vsnmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS M_POS A_POS R_POS>;
            bindings = <VSNMAR>;
        };
        vsnpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS P_POS A_POS R_POS>;
            bindings = <VSNPAR>;
        };
        vsempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS E_POS M_POS P_POS A_POS>;
            bindings = <VSEMPA>;
        };
        vsempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS E_POS M_POS P_POS R_POS>;
            bindings = <VSEMPR>;
        };
        vsemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS E_POS M_POS A_POS R_POS>;
            bindings = <VSEMAR>;
        };
        vsepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS E_POS P_POS A_POS R_POS>;
            bindings = <VSEPAR>;
        };
        vsmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS M_POS P_POS A_POS R_POS>;
            bindings = <VSMPAR>;
        };
        vocnem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS E_POS M_POS>;
            bindings = <VOCNEM>;
        };
        vocnep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS E_POS P_POS>;
            bindings = <VOCNEP>;
        };
        vocnea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS E_POS A_POS>;
            bindings = <VOCNEA>;
        };
        vocner { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS E_POS R_POS>;
            bindings = <VOCNER>;
        };
        vocnmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS M_POS P_POS>;
            bindings = <VOCNMP>;
        };
        vocnma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS M_POS A_POS>;
            bindings = <VOCNMA>;
        };
        vocnmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS M_POS R_POS>;
            bindings = <VOCNMR>;
        };
        vocnpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS P_POS A_POS>;
            bindings = <VOCNPA>;
        };
        vocnpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS P_POS R_POS>;
            bindings = <VOCNPR>;
        };
        vocnar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS A_POS R_POS>;
            bindings = <VOCNAR>;
        };
        vocemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS E_POS M_POS P_POS>;
            bindings = <VOCEMP>;
        };
        vocema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS E_POS M_POS A_POS>;
            bindings = <VOCEMA>;
        };
        vocemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS E_POS M_POS R_POS>;
            bindings = <VOCEMR>;
        };
        vocepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS E_POS P_POS A_POS>;
            bindings = <VOCEPA>;
        };
        vocepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS E_POS P_POS R_POS>;
            bindings = <VOCEPR>;
        };
        vocear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS E_POS A_POS R_POS>;
            bindings = <VOCEAR>;
        };
        vocmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS M_POS P_POS A_POS>;
            bindings = <VOCMPA>;
        };
        vocmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS M_POS P_POS R_POS>;
            bindings = <VOCMPR>;
        };
        vocmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS M_POS A_POS R_POS>;
            bindings = <VOCMAR>;
        };
        vocpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS P_POS A_POS R_POS>;
            bindings = <VOCPAR>;
        };
        vonemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS E_POS M_POS P_POS>;
            bindings = <VONEMP>;
        };
        vonema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS E_POS M_POS A_POS>;
            bindings = <VONEMA>;
        };
        vonemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS E_POS M_POS R_POS>;
            bindings = <VONEMR>;
        };
        vonepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS E_POS P_POS A_POS>;
            bindings = <VONEPA>;
        };
        vonepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS E_POS P_POS R_POS>;
            bindings = <VONEPR>;
        };
        vonear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS E_POS A_POS R_POS>;
            bindings = <VONEAR>;
        };
        vonmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS M_POS P_POS A_POS>;
            bindings = <VONMPA>;
        };
        vonmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS M_POS P_POS R_POS>;
            bindings = <VONMPR>;
        };
        vonmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS M_POS A_POS R_POS>;
            bindings = <VONMAR>;
        };
        vonpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS P_POS A_POS R_POS>;
            bindings = <VONPAR>;
        };
        voempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS E_POS M_POS P_POS A_POS>;
            bindings = <VOEMPA>;
        };
        voempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS E_POS M_POS P_POS R_POS>;
            bindings = <VOEMPR>;
        };
        voemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS E_POS M_POS A_POS R_POS>;
            bindings = <VOEMAR>;
        };
        voepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS E_POS P_POS A_POS R_POS>;
            bindings = <VOEPAR>;
        };
        vompar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS M_POS P_POS A_POS R_POS>;
            bindings = <VOMPAR>;
        };
        vcnemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS E_POS M_POS P_POS>;
            bindings = <VCNEMP>;
        };
        vcnema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS E_POS M_POS A_POS>;
            bindings = <VCNEMA>;
        };
        vcnemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS E_POS M_POS R_POS>;
            bindings = <VCNEMR>;
        };
        vcnepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS E_POS P_POS A_POS>;
            bindings = <VCNEPA>;
        };
        vcnepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS E_POS P_POS R_POS>;
            bindings = <VCNEPR>;
        };
        vcnear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS E_POS A_POS R_POS>;
            bindings = <VCNEAR>;
        };
        vcnmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS M_POS P_POS A_POS>;
            bindings = <VCNMPA>;
        };
        vcnmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS M_POS P_POS R_POS>;
            bindings = <VCNMPR>;
        };
        vcnmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS M_POS A_POS R_POS>;
            bindings = <VCNMAR>;
        };
        vcnpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS P_POS A_POS R_POS>;
            bindings = <VCNPAR>;
        };
        vcempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS E_POS M_POS P_POS A_POS>;
            bindings = <VCEMPA>;
        };
        vcempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS E_POS M_POS P_POS R_POS>;
            bindings = <VCEMPR>;
        };
        vcemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS E_POS M_POS A_POS R_POS>;
            bindings = <VCEMAR>;
        };
        vcepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS E_POS P_POS A_POS R_POS>;
            bindings = <VCEPAR>;
        };
        vcmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS M_POS P_POS A_POS R_POS>;
            bindings = <VCMPAR>;
        };
        vnempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS E_POS M_POS P_POS A_POS>;
            bindings = <VNEMPA>;
        };
        vnempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS E_POS M_POS P_POS R_POS>;
            bindings = <VNEMPR>;
        };
        vnemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS E_POS M_POS A_POS R_POS>;
            bindings = <VNEMAR>;
        };
        vnepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS E_POS P_POS A_POS R_POS>;
            bindings = <VNEPAR>;
        };
        vnmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS M_POS P_POS A_POS R_POS>;
            bindings = <VNMPAR>;
        };
        vempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <VEMPAR>;
        };
        socnem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS E_POS M_POS>;
            bindings = <SOCNEM>;
        };
        socnep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS E_POS P_POS>;
            bindings = <SOCNEP>;
        };
        socnea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS E_POS A_POS>;
            bindings = <SOCNEA>;
        };
        socner { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS E_POS R_POS>;
            bindings = <SOCNER>;
        };
        socnmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS M_POS P_POS>;
            bindings = <SOCNMP>;
        };
        socnma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS M_POS A_POS>;
            bindings = <SOCNMA>;
        };
        socnmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS M_POS R_POS>;
            bindings = <SOCNMR>;
        };
        socnpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS P_POS A_POS>;
            bindings = <SOCNPA>;
        };
        socnpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS P_POS R_POS>;
            bindings = <SOCNPR>;
        };
        socnar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS A_POS R_POS>;
            bindings = <SOCNAR>;
        };
        socemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS E_POS M_POS P_POS>;
            bindings = <SOCEMP>;
        };
        socema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS E_POS M_POS A_POS>;
            bindings = <SOCEMA>;
        };
        socemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS E_POS M_POS R_POS>;
            bindings = <SOCEMR>;
        };
        socepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS E_POS P_POS A_POS>;
            bindings = <SOCEPA>;
        };
        socepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS E_POS P_POS R_POS>;
            bindings = <SOCEPR>;
        };
        socear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS E_POS A_POS R_POS>;
            bindings = <SOCEAR>;
        };
        socmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS M_POS P_POS A_POS>;
            bindings = <SOCMPA>;
        };
        socmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS M_POS P_POS R_POS>;
            bindings = <SOCMPR>;
        };
        socmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS M_POS A_POS R_POS>;
            bindings = <SOCMAR>;
        };
        socpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS P_POS A_POS R_POS>;
            bindings = <SOCPAR>;
        };
        sonemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS E_POS M_POS P_POS>;
            bindings = <SONEMP>;
        };
        sonema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS E_POS M_POS A_POS>;
            bindings = <SONEMA>;
        };
        sonemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS E_POS M_POS R_POS>;
            bindings = <SONEMR>;
        };
        sonepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS E_POS P_POS A_POS>;
            bindings = <SONEPA>;
        };
        sonepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS E_POS P_POS R_POS>;
            bindings = <SONEPR>;
        };
        sonear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS E_POS A_POS R_POS>;
            bindings = <SONEAR>;
        };
        sonmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS M_POS P_POS A_POS>;
            bindings = <SONMPA>;
        };
        sonmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS M_POS P_POS R_POS>;
            bindings = <SONMPR>;
        };
        sonmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS M_POS A_POS R_POS>;
            bindings = <SONMAR>;
        };
        sonpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS P_POS A_POS R_POS>;
            bindings = <SONPAR>;
        };
        soempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS E_POS M_POS P_POS A_POS>;
            bindings = <SOEMPA>;
        };
        soempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS E_POS M_POS P_POS R_POS>;
            bindings = <SOEMPR>;
        };
        soemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS E_POS M_POS A_POS R_POS>;
            bindings = <SOEMAR>;
        };
        soepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS E_POS P_POS A_POS R_POS>;
            bindings = <SOEPAR>;
        };
        sompar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS M_POS P_POS A_POS R_POS>;
            bindings = <SOMPAR>;
        };
        scnemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS E_POS M_POS P_POS>;
            bindings = <SCNEMP>;
        };
        scnema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS E_POS M_POS A_POS>;
            bindings = <SCNEMA>;
        };
        scnemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS E_POS M_POS R_POS>;
            bindings = <SCNEMR>;
        };
        scnepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS E_POS P_POS A_POS>;
            bindings = <SCNEPA>;
        };
        scnepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS E_POS P_POS R_POS>;
            bindings = <SCNEPR>;
        };
        scnear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS E_POS A_POS R_POS>;
            bindings = <SCNEAR>;
        };
        scnmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS M_POS P_POS A_POS>;
            bindings = <SCNMPA>;
        };
        scnmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS M_POS P_POS R_POS>;
            bindings = <SCNMPR>;
        };
        scnmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS M_POS A_POS R_POS>;
            bindings = <SCNMAR>;
        };
        scnpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS P_POS A_POS R_POS>;
            bindings = <SCNPAR>;
        };
        scempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS E_POS M_POS P_POS A_POS>;
            bindings = <SCEMPA>;
        };
        scempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS E_POS M_POS P_POS R_POS>;
            bindings = <SCEMPR>;
        };
        scemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS E_POS M_POS A_POS R_POS>;
            bindings = <SCEMAR>;
        };
        scepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS E_POS P_POS A_POS R_POS>;
            bindings = <SCEPAR>;
        };
        scmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS M_POS P_POS A_POS R_POS>;
            bindings = <SCMPAR>;
        };
        snempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS E_POS M_POS P_POS A_POS>;
            bindings = <SNEMPA>;
        };
        snempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS E_POS M_POS P_POS R_POS>;
            bindings = <SNEMPR>;
        };
        snemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS E_POS M_POS A_POS R_POS>;
            bindings = <SNEMAR>;
        };
        snepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS E_POS P_POS A_POS R_POS>;
            bindings = <SNEPAR>;
        };
        snmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS M_POS P_POS A_POS R_POS>;
            bindings = <SNMPAR>;
        };
        sempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <SEMPAR>;
        };
        ocnemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS E_POS M_POS P_POS>;
            bindings = <OCNEMP>;
        };
        ocnema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS E_POS M_POS A_POS>;
            bindings = <OCNEMA>;
        };
        ocnemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS E_POS M_POS R_POS>;
            bindings = <OCNEMR>;
        };
        ocnepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS E_POS P_POS A_POS>;
            bindings = <OCNEPA>;
        };
        ocnepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS E_POS P_POS R_POS>;
            bindings = <OCNEPR>;
        };
        ocnear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS E_POS A_POS R_POS>;
            bindings = <OCNEAR>;
        };
        ocnmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS M_POS P_POS A_POS>;
            bindings = <OCNMPA>;
        };
        ocnmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS M_POS P_POS R_POS>;
            bindings = <OCNMPR>;
        };
        ocnmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS M_POS A_POS R_POS>;
            bindings = <OCNMAR>;
        };
        ocnpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS P_POS A_POS R_POS>;
            bindings = <OCNPAR>;
        };
        ocempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS E_POS M_POS P_POS A_POS>;
            bindings = <OCEMPA>;
        };
        ocempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS E_POS M_POS P_POS R_POS>;
            bindings = <OCEMPR>;
        };
        ocemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS E_POS M_POS A_POS R_POS>;
            bindings = <OCEMAR>;
        };
        ocepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS E_POS P_POS A_POS R_POS>;
            bindings = <OCEPAR>;
        };
        ocmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS M_POS P_POS A_POS R_POS>;
            bindings = <OCMPAR>;
        };
        onempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS E_POS M_POS P_POS A_POS>;
            bindings = <ONEMPA>;
        };
        onempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS E_POS M_POS P_POS R_POS>;
            bindings = <ONEMPR>;
        };
        onemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS E_POS M_POS A_POS R_POS>;
            bindings = <ONEMAR>;
        };
        onepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS E_POS P_POS A_POS R_POS>;
            bindings = <ONEPAR>;
        };
        onmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS M_POS P_POS A_POS R_POS>;
            bindings = <ONMPAR>;
        };
        oempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <OEMPAR>;
        };
        cnempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS E_POS M_POS P_POS A_POS>;
            bindings = <CNEMPA>;
        };
        cnempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS E_POS M_POS P_POS R_POS>;
            bindings = <CNEMPR>;
        };
        cnemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS E_POS M_POS A_POS R_POS>;
            bindings = <CNEMAR>;
        };
        cnepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS E_POS P_POS A_POS R_POS>;
            bindings = <CNEPAR>;
        };
        cnmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS M_POS P_POS A_POS R_POS>;
            bindings = <CNMPAR>;
        };
        cempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <CEMPAR>;
        };
        nempar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS E_POS M_POS P_POS A_POS R_POS>;
            bindings = <NEMPAR>;
        };

        /* ❖ 5-key combos (global) */
        vsocn { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS N_POS>;
            bindings = <VSOCN>;
        };
        vsoce { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS E_POS>;
            bindings = <VSOCE>;
        };
        vsocm { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS M_POS>;
            bindings = <VSOCM>;
        };
        vsocp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS P_POS>;
            bindings = <VSOCP>;
        };
        vsoca { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS A_POS>;
            bindings = <VSOCA>;
        };
        vsocr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS R_POS>;
            bindings = <VSOCR>;
        };
        vsone { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS E_POS>;
            bindings = <VSONE>;
        };
        vsonm { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS M_POS>;
            bindings = <VSONM>;
        };
        vsonp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS P_POS>;
            bindings = <VSONP>;
        };
        vsona { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS A_POS>;
            bindings = <VSONA>;
        };
        vsonr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS R_POS>;
            bindings = <VSONR>;
        };
        vsoem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS E_POS M_POS>;
            bindings = <VSOEM>;
        };
        vsoep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS E_POS P_POS>;
            bindings = <VSOEP>;
        };
        vsoea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS E_POS A_POS>;
            bindings = <VSOEA>;
        };
        vsoer { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS E_POS R_POS>;
            bindings = <VSOER>;
        };
        vsomp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS M_POS P_POS>;
            bindings = <VSOMP>;
        };
        vsoma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS M_POS A_POS>;
            bindings = <VSOMA>;
        };
        vsomr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS M_POS R_POS>;
            bindings = <VSOMR>;
        };
        vsopa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS P_POS A_POS>;
            bindings = <VSOPA>;
        };
        vsopr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS P_POS R_POS>;
            bindings = <VSOPR>;
        };
        vsoar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS A_POS R_POS>;
            bindings = <VSOAR>;
        };
        vscne { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS E_POS>;
            bindings = <VSCNE>;
        };
        vscnm { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS M_POS>;
            bindings = <VSCNM>;
        };
        vscnp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS P_POS>;
            bindings = <VSCNP>;
        };
        vscna { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS A_POS>;
            bindings = <VSCNA>;
        };
        vscnr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS R_POS>;
            bindings = <VSCNR>;
        };
        vscem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS E_POS M_POS>;
            bindings = <VSCEM>;
        };
        vscep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS E_POS P_POS>;
            bindings = <VSCEP>;
        };
        vscea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS E_POS A_POS>;
            bindings = <VSCEA>;
        };
        vscer { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS E_POS R_POS>;
            bindings = <VSCER>;
        };
        vscmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS M_POS P_POS>;
            bindings = <VSCMP>;
        };
        vscma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS M_POS A_POS>;
            bindings = <VSCMA>;
        };
        vscmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS M_POS R_POS>;
            bindings = <VSCMR>;
        };
        vscpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS P_POS A_POS>;
            bindings = <VSCPA>;
        };
        vscpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS P_POS R_POS>;
            bindings = <VSCPR>;
        };
        vscar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS A_POS R_POS>;
            bindings = <VSCAR>;
        };
        vsnem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS E_POS M_POS>;
            bindings = <VSNEM>;
        };
        vsnep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS E_POS P_POS>;
            bindings = <VSNEP>;
        };
        vsnea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS E_POS A_POS>;
            bindings = <VSNEA>;
        };
        vsner { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS E_POS R_POS>;
            bindings = <VSNER>;
        };
        vsnmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS M_POS P_POS>;
            bindings = <VSNMP>;
        };
        vsnma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS M_POS A_POS>;
            bindings = <VSNMA>;
        };
        vsnmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS M_POS R_POS>;
            bindings = <VSNMR>;
        };
        vsnpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS P_POS A_POS>;
            bindings = <VSNPA>;
        };
        vsnpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS P_POS R_POS>;
            bindings = <VSNPR>;
        };
        vsnar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS A_POS R_POS>;
            bindings = <VSNAR>;
        };
        vsemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS E_POS M_POS P_POS>;
            bindings = <VSEMP>;
        };
        vsema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS E_POS M_POS A_POS>;
            bindings = <VSEMA>;
        };
        vsemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS E_POS M_POS R_POS>;
            bindings = <VSEMR>;
        };
        vsepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS E_POS P_POS A_POS>;
            bindings = <VSEPA>;
        };
        vsepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS E_POS P_POS R_POS>;
            bindings = <VSEPR>;
        };
        vsear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS E_POS A_POS R_POS>;
            bindings = <VSEAR>;
        };
        vsmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS M_POS P_POS A_POS>;
            bindings = <VSMPA>;
        };
        vsmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS M_POS P_POS R_POS>;
            bindings = <VSMPR>;
        };
        vsmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS M_POS A_POS R_POS>;
            bindings = <VSMAR>;
        };
        vspar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS P_POS A_POS R_POS>;
            bindings = <VSPAR>;
        };
        vocne { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS E_POS>;
            bindings = <VOCNE>;
        };
        vocnm { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS M_POS>;
            bindings = <VOCNM>;
        };
        vocnp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS P_POS>;
            bindings = <VOCNP>;
        };
        vocna { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS A_POS>;
            bindings = <VOCNA>;
        };
        vocnr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS R_POS>;
            bindings = <VOCNR>;
        };
        vocem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS E_POS M_POS>;
            bindings = <VOCEM>;
        };
        vocep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS E_POS P_POS>;
            bindings = <VOCEP>;
        };
        vocea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS E_POS A_POS>;
            bindings = <VOCEA>;
        };
        vocer { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS E_POS R_POS>;
            bindings = <VOCER>;
        };
        vocmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS M_POS P_POS>;
            bindings = <VOCMP>;
        };
        vocma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS M_POS A_POS>;
            bindings = <VOCMA>;
        };
        vocmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS M_POS R_POS>;
            bindings = <VOCMR>;
        };
        vocpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS P_POS A_POS>;
            bindings = <VOCPA>;
        };
        vocpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS P_POS R_POS>;
            bindings = <VOCPR>;
        };
        vocar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS A_POS R_POS>;
            bindings = <VOCAR>;
        };
        vonem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS E_POS M_POS>;
            bindings = <VONEM>;
        };
        vonep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS E_POS P_POS>;
            bindings = <VONEP>;
        };
        vonea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS E_POS A_POS>;
            bindings = <VONEA>;
        };
        voner { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS E_POS R_POS>;
            bindings = <VONER>;
        };
        vonmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS M_POS P_POS>;
            bindings = <VONMP>;
        };
        vonma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS M_POS A_POS>;
            bindings = <VONMA>;
        };
        vonmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS M_POS R_POS>;
            bindings = <VONMR>;
        };
        vonpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS P_POS A_POS>;
            bindings = <VONPA>;
        };
        vonpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS P_POS R_POS>;
            bindings = <VONPR>;
        };
        vonar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS A_POS R_POS>;
            bindings = <VONAR>;
        };
        voemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS E_POS M_POS P_POS>;
            bindings = <VOEMP>;
        };
        voema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS E_POS M_POS A_POS>;
            bindings = <VOEMA>;
        };
        voemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS E_POS M_POS R_POS>;
            bindings = <VOEMR>;
        };
        voepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS E_POS P_POS A_POS>;
            bindings = <VOEPA>;
        };
        voepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS E_POS P_POS R_POS>;
            bindings = <VOEPR>;
        };
        voear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS E_POS A_POS R_POS>;
            bindings = <VOEAR>;
        };
        vompa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS M_POS P_POS A_POS>;
            bindings = <VOMPA>;
        };
        vompr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS M_POS P_POS R_POS>;
            bindings = <VOMPR>;
        };
        vomar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS M_POS A_POS R_POS>;
            bindings = <VOMAR>;
        };
        vopar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS P_POS A_POS R_POS>;
            bindings = <VOPAR>;
        };
        vcnem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS E_POS M_POS>;
            bindings = <VCNEM>;
        };
        vcnep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS E_POS P_POS>;
            bindings = <VCNEP>;
        };
        vcnea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS E_POS A_POS>;
            bindings = <VCNEA>;
        };
        vcner { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS E_POS R_POS>;
            bindings = <VCNER>;
        };
        vcnmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS M_POS P_POS>;
            bindings = <VCNMP>;
        };
        vcnma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS M_POS A_POS>;
            bindings = <VCNMA>;
        };
        vcnmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS M_POS R_POS>;
            bindings = <VCNMR>;
        };
        vcnpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS P_POS A_POS>;
            bindings = <VCNPA>;
        };
        vcnpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS P_POS R_POS>;
            bindings = <VCNPR>;
        };
        vcnar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS A_POS R_POS>;
            bindings = <VCNAR>;
        };
        vcemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS E_POS M_POS P_POS>;
            bindings = <VCEMP>;
        };
        vcema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS E_POS M_POS A_POS>;
            bindings = <VCEMA>;
        };
        vcemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS E_POS M_POS R_POS>;
            bindings = <VCEMR>;
        };
        vcepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS E_POS P_POS A_POS>;
            bindings = <VCEPA>;
        };
        vcepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS E_POS P_POS R_POS>;
            bindings = <VCEPR>;
        };
        vcear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS E_POS A_POS R_POS>;
            bindings = <VCEAR>;
        };
        vcmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS M_POS P_POS A_POS>;
            bindings = <VCMPA>;
        };
        vcmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS M_POS P_POS R_POS>;
            bindings = <VCMPR>;
        };
        vcmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS M_POS A_POS R_POS>;
            bindings = <VCMAR>;
        };
        vcpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS P_POS A_POS R_POS>;
            bindings = <VCPAR>;
        };
        vnemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS E_POS M_POS P_POS>;
            bindings = <VNEMP>;
        };
        vnema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS E_POS M_POS A_POS>;
            bindings = <VNEMA>;
        };
        vnemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS E_POS M_POS R_POS>;
            bindings = <VNEMR>;
        };
        vnepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS E_POS P_POS A_POS>;
            bindings = <VNEPA>;
        };
        vnepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS E_POS P_POS R_POS>;
            bindings = <VNEPR>;
        };
        vnear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS E_POS A_POS R_POS>;
            bindings = <VNEAR>;
        };
        vnmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS M_POS P_POS A_POS>;
            bindings = <VNMPA>;
        };
        vnmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS M_POS P_POS R_POS>;
            bindings = <VNMPR>;
        };
        vnmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS M_POS A_POS R_POS>;
            bindings = <VNMAR>;
        };
        vnpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS P_POS A_POS R_POS>;
            bindings = <VNPAR>;
        };
        vempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS E_POS M_POS P_POS A_POS>;
            bindings = <VEMPA>;
        };
        vempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS E_POS M_POS P_POS R_POS>;
            bindings = <VEMPR>;
        };
        vemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS E_POS M_POS A_POS R_POS>;
            bindings = <VEMAR>;
        };
        vepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS E_POS P_POS A_POS R_POS>;
            bindings = <VEPAR>;
        };
        vmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS M_POS P_POS A_POS R_POS>;
            bindings = <VMPAR>;
        };
        socne { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS E_POS>;
            bindings = <SOCNE>;
        };
        socnm { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS M_POS>;
            bindings = <SOCNM>;
        };
        socnp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS P_POS>;
            bindings = <SOCNP>;
        };
        socna { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS A_POS>;
            bindings = <SOCNA>;
        };
        socnr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS R_POS>;
            bindings = <SOCNR>;
        };
        socem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS E_POS M_POS>;
            bindings = <SOCEM>;
        };
        socep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS E_POS P_POS>;
            bindings = <SOCEP>;
        };
        socea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS E_POS A_POS>;
            bindings = <SOCEA>;
        };
        socer { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS E_POS R_POS>;
            bindings = <SOCER>;
        };
        socmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS M_POS P_POS>;
            bindings = <SOCMP>;
        };
        socma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS M_POS A_POS>;
            bindings = <SOCMA>;
        };
        socmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS M_POS R_POS>;
            bindings = <SOCMR>;
        };
        socpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS P_POS A_POS>;
            bindings = <SOCPA>;
        };
        socpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS P_POS R_POS>;
            bindings = <SOCPR>;
        };
        socar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS A_POS R_POS>;
            bindings = <SOCAR>;
        };
        sonem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS E_POS M_POS>;
            bindings = <SONEM>;
        };
        sonep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS E_POS P_POS>;
            bindings = <SONEP>;
        };
        sonea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS E_POS A_POS>;
            bindings = <SONEA>;
        };
        soner { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS E_POS R_POS>;
            bindings = <SONER>;
        };
        sonmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS M_POS P_POS>;
            bindings = <SONMP>;
        };
        sonma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS M_POS A_POS>;
            bindings = <SONMA>;
        };
        sonmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS M_POS R_POS>;
            bindings = <SONMR>;
        };
        sonpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS P_POS A_POS>;
            bindings = <SONPA>;
        };
        sonpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS P_POS R_POS>;
            bindings = <SONPR>;
        };
        sonar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS A_POS R_POS>;
            bindings = <SONAR>;
        };
        soemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS E_POS M_POS P_POS>;
            bindings = <SOEMP>;
        };
        soema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS E_POS M_POS A_POS>;
            bindings = <SOEMA>;
        };
        soemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS E_POS M_POS R_POS>;
            bindings = <SOEMR>;
        };
        soepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS E_POS P_POS A_POS>;
            bindings = <SOEPA>;
        };
        soepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS E_POS P_POS R_POS>;
            bindings = <SOEPR>;
        };
        soear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS E_POS A_POS R_POS>;
            bindings = <SOEAR>;
        };
        sompa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS M_POS P_POS A_POS>;
            bindings = <SOMPA>;
        };
        sompr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS M_POS P_POS R_POS>;
            bindings = <SOMPR>;
        };
        somar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS M_POS A_POS R_POS>;
            bindings = <SOMAR>;
        };
        sopar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS P_POS A_POS R_POS>;
            bindings = <SOPAR>;
        };
        scnem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS E_POS M_POS>;
            bindings = <SCNEM>;
        };
        scnep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS E_POS P_POS>;
            bindings = <SCNEP>;
        };
        scnea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS E_POS A_POS>;
            bindings = <SCNEA>;
        };
        scner { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS E_POS R_POS>;
            bindings = <SCNER>;
        };
        scnmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS M_POS P_POS>;
            bindings = <SCNMP>;
        };
        scnma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS M_POS A_POS>;
            bindings = <SCNMA>;
        };
        scnmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS M_POS R_POS>;
            bindings = <SCNMR>;
        };
        scnpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS P_POS A_POS>;
            bindings = <SCNPA>;
        };
        scnpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS P_POS R_POS>;
            bindings = <SCNPR>;
        };
        scnar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS A_POS R_POS>;
            bindings = <SCNAR>;
        };
        scemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS E_POS M_POS P_POS>;
            bindings = <SCEMP>;
        };
        scema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS E_POS M_POS A_POS>;
            bindings = <SCEMA>;
        };
        scemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS E_POS M_POS R_POS>;
            bindings = <SCEMR>;
        };
        scepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS E_POS P_POS A_POS>;
            bindings = <SCEPA>;
        };
        scepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS E_POS P_POS R_POS>;
            bindings = <SCEPR>;
        };
        scear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS E_POS A_POS R_POS>;
            bindings = <SCEAR>;
        };
        scmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS M_POS P_POS A_POS>;
            bindings = <SCMPA>;
        };
        scmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS M_POS P_POS R_POS>;
            bindings = <SCMPR>;
        };
        scmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS M_POS A_POS R_POS>;
            bindings = <SCMAR>;
        };
        scpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS P_POS A_POS R_POS>;
            bindings = <SCPAR>;
        };
        snemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS E_POS M_POS P_POS>;
            bindings = <SNEMP>;
        };
        snema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS E_POS M_POS A_POS>;
            bindings = <SNEMA>;
        };
        snemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS E_POS M_POS R_POS>;
            bindings = <SNEMR>;
        };
        snepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS E_POS P_POS A_POS>;
            bindings = <SNEPA>;
        };
        snepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS E_POS P_POS R_POS>;
            bindings = <SNEPR>;
        };
        snear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS E_POS A_POS R_POS>;
            bindings = <SNEAR>;
        };
        snmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS M_POS P_POS A_POS>;
            bindings = <SNMPA>;
        };
        snmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS M_POS P_POS R_POS>;
            bindings = <SNMPR>;
        };
        snmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS M_POS A_POS R_POS>;
            bindings = <SNMAR>;
        };
        snpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS P_POS A_POS R_POS>;
            bindings = <SNPAR>;
        };
        sempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS E_POS M_POS P_POS A_POS>;
            bindings = <SEMPA>;
        };
        sempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS E_POS M_POS P_POS R_POS>;
            bindings = <SEMPR>;
        };
        semar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS E_POS M_POS A_POS R_POS>;
            bindings = <SEMAR>;
        };
        separ { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS E_POS P_POS A_POS R_POS>;
            bindings = <SEPAR>;
        };
        smpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS M_POS P_POS A_POS R_POS>;
            bindings = <SMPAR>;
        };
        ocnem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS E_POS M_POS>;
            bindings = <OCNEM>;
        };
        ocnep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS E_POS P_POS>;
            bindings = <OCNEP>;
        };
        ocnea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS E_POS A_POS>;
            bindings = <OCNEA>;
        };
        ocner { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS E_POS R_POS>;
            bindings = <OCNER>;
        };
        ocnmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS M_POS P_POS>;
            bindings = <OCNMP>;
        };
        ocnma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS M_POS A_POS>;
            bindings = <OCNMA>;
        };
        ocnmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS M_POS R_POS>;
            bindings = <OCNMR>;
        };
        ocnpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS P_POS A_POS>;
            bindings = <OCNPA>;
        };
        ocnpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS P_POS R_POS>;
            bindings = <OCNPR>;
        };
        ocnar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS A_POS R_POS>;
            bindings = <OCNAR>;
        };
        ocemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS E_POS M_POS P_POS>;
            bindings = <OCEMP>;
        };
        ocema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS E_POS M_POS A_POS>;
            bindings = <OCEMA>;
        };
        ocemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS E_POS M_POS R_POS>;
            bindings = <OCEMR>;
        };
        ocepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS E_POS P_POS A_POS>;
            bindings = <OCEPA>;
        };
        ocepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS E_POS P_POS R_POS>;
            bindings = <OCEPR>;
        };
        ocear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS E_POS A_POS R_POS>;
            bindings = <OCEAR>;
        };
        ocmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS M_POS P_POS A_POS>;
            bindings = <OCMPA>;
        };
        ocmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS M_POS P_POS R_POS>;
            bindings = <OCMPR>;
        };
        ocmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS M_POS A_POS R_POS>;
            bindings = <OCMAR>;
        };
        ocpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS P_POS A_POS R_POS>;
            bindings = <OCPAR>;
        };
        onemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS E_POS M_POS P_POS>;
            bindings = <ONEMP>;
        };
        onema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS E_POS M_POS A_POS>;
            bindings = <ONEMA>;
        };
        onemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS E_POS M_POS R_POS>;
            bindings = <ONEMR>;
        };
        onepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS E_POS P_POS A_POS>;
            bindings = <ONEPA>;
        };
        onepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS E_POS P_POS R_POS>;
            bindings = <ONEPR>;
        };
        onear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS E_POS A_POS R_POS>;
            bindings = <ONEAR>;
        };
        onmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS M_POS P_POS A_POS>;
            bindings = <ONMPA>;
        };
        onmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS M_POS P_POS R_POS>;
            bindings = <ONMPR>;
        };
        onmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS M_POS A_POS R_POS>;
            bindings = <ONMAR>;
        };
        onpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS P_POS A_POS R_POS>;
            bindings = <ONPAR>;
        };
        oempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS E_POS M_POS P_POS A_POS>;
            bindings = <OEMPA>;
        };
        oempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS E_POS M_POS P_POS R_POS>;
            bindings = <OEMPR>;
        };
        oemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS E_POS M_POS A_POS R_POS>;
            bindings = <OEMAR>;
        };
        oepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS E_POS P_POS A_POS R_POS>;
            bindings = <OEPAR>;
        };
        ompar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS M_POS P_POS A_POS R_POS>;
            bindings = <OMPAR>;
        };
        cnemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS E_POS M_POS P_POS>;
            bindings = <CNEMP>;
        };
        cnema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS E_POS M_POS A_POS>;
            bindings = <CNEMA>;
        };
        cnemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS E_POS M_POS R_POS>;
            bindings = <CNEMR>;
        };
        cnepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS E_POS P_POS A_POS>;
            bindings = <CNEPA>;
        };
        cnepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS E_POS P_POS R_POS>;
            bindings = <CNEPR>;
        };
        cnear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS E_POS A_POS R_POS>;
            bindings = <CNEAR>;
        };
        cnmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS M_POS P_POS A_POS>;
            bindings = <CNMPA>;
        };
        cnmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS M_POS P_POS R_POS>;
            bindings = <CNMPR>;
        };
        cnmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS M_POS A_POS R_POS>;
            bindings = <CNMAR>;
        };
        cnpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS P_POS A_POS R_POS>;
            bindings = <CNPAR>;
        };
        cempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS E_POS M_POS P_POS A_POS>;
            bindings = <CEMPA>;
        };
        cempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS E_POS M_POS P_POS R_POS>;
            bindings = <CEMPR>;
        };
        cemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS E_POS M_POS A_POS R_POS>;
            bindings = <CEMAR>;
        };
        cepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS E_POS P_POS A_POS R_POS>;
            bindings = <CEPAR>;
        };
        cmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS M_POS P_POS A_POS R_POS>;
            bindings = <CMPAR>;
        };
        nempa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS E_POS M_POS P_POS A_POS>;
            bindings = <NEMPA>;
        };
        nempr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS E_POS M_POS P_POS R_POS>;
            bindings = <NEMPR>;
        };
        nemar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS E_POS M_POS A_POS R_POS>;
            bindings = <NEMAR>;
        };
        nepar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS E_POS P_POS A_POS R_POS>;
            bindings = <NEPAR>;
        };
        nmpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS M_POS P_POS A_POS R_POS>;
            bindings = <NMPAR>;
        };
        empar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <E_POS M_POS P_POS A_POS R_POS>;
            bindings = <EMPAR>;
        };

        /* ❖ 4-key combos (global) */
        vsoc { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS C_POS>;
            bindings = <VSOC>;
        };
        vson { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS N_POS>;
            bindings = <VSON>;
        };
        vsoe { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS E_POS>;
            bindings = <VSOE>;
        };
        vsom { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS M_POS>;
            bindings = <VSOM>;
        };
        vsop { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS P_POS>;
            bindings = <VSOP>;
        };
        vsoa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS A_POS>;
            bindings = <VSOA>;
        };
        vsor { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS R_POS>;
            bindings = <VSOR>;
        };
        vscn { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS N_POS>;
            bindings = <VSCN>;
        };
        vsce { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS E_POS>;
            bindings = <VSCE>;
        };
        vscm { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS M_POS>;
            bindings = <VSCM>;
        };
        vscp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS P_POS>;
            bindings = <VSCP>;
        };
        vsca { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS A_POS>;
            bindings = <VSCA>;
        };
        vscr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS R_POS>;
            bindings = <VSCR>;
        };
        vsne { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS E_POS>;
            bindings = <VSNE>;
        };
        vsnm { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS M_POS>;
            bindings = <VSNM>;
        };
        vsnp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS P_POS>;
            bindings = <VSNP>;
        };
        vsna { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS A_POS>;
            bindings = <VSNA>;
        };
        vsnr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS R_POS>;
            bindings = <VSNR>;
        };
        vsem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS E_POS M_POS>;
            bindings = <VSEM>;
        };
        vsep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS E_POS P_POS>;
            bindings = <VSEP>;
        };
        vsea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS E_POS A_POS>;
            bindings = <VSEA>;
        };
        vser { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS E_POS R_POS>;
            bindings = <VSER>;
        };
        vsmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS M_POS P_POS>;
            bindings = <VSMP>;
        };
        vsma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS M_POS A_POS>;
            bindings = <VSMA>;
        };
        vsmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS M_POS R_POS>;
            bindings = <VSMR>;
        };
        vspa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS P_POS A_POS>;
            bindings = <VSPA>;
        };
        vspr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS P_POS R_POS>;
            bindings = <VSPR>;
        };
        vsar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS A_POS R_POS>;
            bindings = <VSAR>;
        };
        vocn { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS N_POS>;
            bindings = <VOCN>;
        };
        voce { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS E_POS>;
            bindings = <VOCE>;
        };
        vocm { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS M_POS>;
            bindings = <VOCM>;
        };
        vocp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS P_POS>;
            bindings = <VOCP>;
        };
        voca { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS A_POS>;
            bindings = <VOCA>;
        };
        vocr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS R_POS>;
            bindings = <VOCR>;
        };
        vone { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS E_POS>;
            bindings = <VONE>;
        };
        vonm { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS M_POS>;
            bindings = <VONM>;
        };
        vonp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS P_POS>;
            bindings = <VONP>;
        };
        vona { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS A_POS>;
            bindings = <VONA>;
        };
        vonr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS R_POS>;
            bindings = <VONR>;
        };
        voem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS E_POS M_POS>;
            bindings = <VOEM>;
        };
        voep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS E_POS P_POS>;
            bindings = <VOEP>;
        };
        voea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS E_POS A_POS>;
            bindings = <VOEA>;
        };
        voer { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS E_POS R_POS>;
            bindings = <VOER>;
        };
        vomp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS M_POS P_POS>;
            bindings = <VOMP>;
        };
        voma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS M_POS A_POS>;
            bindings = <VOMA>;
        };
        vomr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS M_POS R_POS>;
            bindings = <VOMR>;
        };
        vopa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS P_POS A_POS>;
            bindings = <VOPA>;
        };
        vopr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS P_POS R_POS>;
            bindings = <VOPR>;
        };
        voar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS A_POS R_POS>;
            bindings = <VOAR>;
        };
        vcne { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS E_POS>;
            bindings = <VCNE>;
        };
        vcnm { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS M_POS>;
            bindings = <VCNM>;
        };
        vcnp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS P_POS>;
            bindings = <VCNP>;
        };
        vcna { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS A_POS>;
            bindings = <VCNA>;
        };
        vcnr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS R_POS>;
            bindings = <VCNR>;
        };
        vcem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS E_POS M_POS>;
            bindings = <VCEM>;
        };
        vcep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS E_POS P_POS>;
            bindings = <VCEP>;
        };
        vcea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS E_POS A_POS>;
            bindings = <VCEA>;
        };
        vcer { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS E_POS R_POS>;
            bindings = <VCER>;
        };
        vcmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS M_POS P_POS>;
            bindings = <VCMP>;
        };
        vcma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS M_POS A_POS>;
            bindings = <VCMA>;
        };
        vcmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS M_POS R_POS>;
            bindings = <VCMR>;
        };
        vcpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS P_POS A_POS>;
            bindings = <VCPA>;
        };
        vcpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS P_POS R_POS>;
            bindings = <VCPR>;
        };
        vcar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS A_POS R_POS>;
            bindings = <VCAR>;
        };
        vnem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS E_POS M_POS>;
            bindings = <VNEM>;
        };
        vnep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS E_POS P_POS>;
            bindings = <VNEP>;
        };
        vnea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS E_POS A_POS>;
            bindings = <VNEA>;
        };
        vner { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS E_POS R_POS>;
            bindings = <VNER>;
        };
        vnmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS M_POS P_POS>;
            bindings = <VNMP>;
        };
        vnma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS M_POS A_POS>;
            bindings = <VNMA>;
        };
        vnmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS M_POS R_POS>;
            bindings = <VNMR>;
        };
        vnpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS P_POS A_POS>;
            bindings = <VNPA>;
        };
        vnpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS P_POS R_POS>;
            bindings = <VNPR>;
        };
        vnar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS A_POS R_POS>;
            bindings = <VNAR>;
        };
        vemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS E_POS M_POS P_POS>;
            bindings = <VEMP>;
        };
        vema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS E_POS M_POS A_POS>;
            bindings = <VEMA>;
        };
        vemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS E_POS M_POS R_POS>;
            bindings = <VEMR>;
        };
        vepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS E_POS P_POS A_POS>;
            bindings = <VEPA>;
        };
        vepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS E_POS P_POS R_POS>;
            bindings = <VEPR>;
        };
        vear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS E_POS A_POS R_POS>;
            bindings = <VEAR>;
        };
        vmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS M_POS P_POS A_POS>;
            bindings = <VMPA>;
        };
        vmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS M_POS P_POS R_POS>;
            bindings = <VMPR>;
        };
        vmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS M_POS A_POS R_POS>;
            bindings = <VMAR>;
        };
        vpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS P_POS A_POS R_POS>;
            bindings = <VPAR>;
        };
        socn { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS N_POS>;
            bindings = <SOCN>;
        };
        soce { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS E_POS>;
            bindings = <SOCE>;
        };
        socm { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS M_POS>;
            bindings = <SOCM>;
        };
        socp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS P_POS>;
            bindings = <SOCP>;
        };
        soca { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS A_POS>;
            bindings = <SOCA>;
        };
        socr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS R_POS>;
            bindings = <SOCR>;
        };
        sone { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS E_POS>;
            bindings = <SONE>;
        };
        sonm { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS M_POS>;
            bindings = <SONM>;
        };
        sonp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS P_POS>;
            bindings = <SONP>;
        };
        sona { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS A_POS>;
            bindings = <SONA>;
        };
        sonr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS R_POS>;
            bindings = <SONR>;
        };
        soem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS E_POS M_POS>;
            bindings = <SOEM>;
        };
        soep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS E_POS P_POS>;
            bindings = <SOEP>;
        };
        soea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS E_POS A_POS>;
            bindings = <SOEA>;
        };
        soer { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS E_POS R_POS>;
            bindings = <SOER>;
        };
        somp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS M_POS P_POS>;
            bindings = <SOMP>;
        };
        soma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS M_POS A_POS>;
            bindings = <SOMA>;
        };
        somr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS M_POS R_POS>;
            bindings = <SOMR>;
        };
        sopa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS P_POS A_POS>;
            bindings = <SOPA>;
        };
        sopr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS P_POS R_POS>;
            bindings = <SOPR>;
        };
        soar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS A_POS R_POS>;
            bindings = <SOAR>;
        };
        scne { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS E_POS>;
            bindings = <SCNE>;
        };
        scnm { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS M_POS>;
            bindings = <SCNM>;
        };
        scnp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS P_POS>;
            bindings = <SCNP>;
        };
        scna { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS A_POS>;
            bindings = <SCNA>;
        };
        scnr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS R_POS>;
            bindings = <SCNR>;
        };
        scem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS E_POS M_POS>;
            bindings = <SCEM>;
        };
        scep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS E_POS P_POS>;
            bindings = <SCEP>;
        };
        scea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS E_POS A_POS>;
            bindings = <SCEA>;
        };
        scer { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS E_POS R_POS>;
            bindings = <SCER>;
        };
        scmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS M_POS P_POS>;
            bindings = <SCMP>;
        };
        scma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS M_POS A_POS>;
            bindings = <SCMA>;
        };
        scmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS M_POS R_POS>;
            bindings = <SCMR>;
        };
        scpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS P_POS A_POS>;
            bindings = <SCPA>;
        };
        scpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS P_POS R_POS>;
            bindings = <SCPR>;
        };
        scar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS A_POS R_POS>;
            bindings = <SCAR>;
        };
        snem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS E_POS M_POS>;
            bindings = <SNEM>;
        };
        snep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS E_POS P_POS>;
            bindings = <SNEP>;
        };
        snea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS E_POS A_POS>;
            bindings = <SNEA>;
        };
        sner { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS E_POS R_POS>;
            bindings = <SNER>;
        };
        snmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS M_POS P_POS>;
            bindings = <SNMP>;
        };
        snma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS M_POS A_POS>;
            bindings = <SNMA>;
        };
        snmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS M_POS R_POS>;
            bindings = <SNMR>;
        };
        snpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS P_POS A_POS>;
            bindings = <SNPA>;
        };
        snpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS P_POS R_POS>;
            bindings = <SNPR>;
        };
        snar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS A_POS R_POS>;
            bindings = <SNAR>;
        };
        semp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS E_POS M_POS P_POS>;
            bindings = <SEMP>;
        };
        sema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS E_POS M_POS A_POS>;
            bindings = <SEMA>;
        };
        semr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS E_POS M_POS R_POS>;
            bindings = <SEMR>;
        };
        sepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS E_POS P_POS A_POS>;
            bindings = <SEPA>;
        };
        sepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS E_POS P_POS R_POS>;
            bindings = <SEPR>;
        };
        sear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS E_POS A_POS R_POS>;
            bindings = <SEAR>;
        };
        smpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS M_POS P_POS A_POS>;
            bindings = <SMPA>;
        };
        smpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS M_POS P_POS R_POS>;
            bindings = <SMPR>;
        };
        smar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS M_POS A_POS R_POS>;
            bindings = <SMAR>;
        };
        spar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS P_POS A_POS R_POS>;
            bindings = <SPAR>;
        };
        ocne { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS E_POS>;
            bindings = <OCNE>;
        };
        ocnm { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS M_POS>;
            bindings = <OCNM>;
        };
        ocnp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS P_POS>;
            bindings = <OCNP>;
        };
        ocna { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS A_POS>;
            bindings = <OCNA>;
        };
        ocnr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS R_POS>;
            bindings = <OCNR>;
        };
        ocem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS E_POS M_POS>;
            bindings = <OCEM>;
        };
        ocep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS E_POS P_POS>;
            bindings = <OCEP>;
        };
        ocea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS E_POS A_POS>;
            bindings = <OCEA>;
        };
        ocer { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS E_POS R_POS>;
            bindings = <OCER>;
        };
        ocmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS M_POS P_POS>;
            bindings = <OCMP>;
        };
        ocma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS M_POS A_POS>;
            bindings = <OCMA>;
        };
        ocmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS M_POS R_POS>;
            bindings = <OCMR>;
        };
        ocpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS P_POS A_POS>;
            bindings = <OCPA>;
        };
        ocpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS P_POS R_POS>;
            bindings = <OCPR>;
        };
        ocar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS A_POS R_POS>;
            bindings = <OCAR>;
        };
        onem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS E_POS M_POS>;
            bindings = <ONEM>;
        };
        onep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS E_POS P_POS>;
            bindings = <ONEP>;
        };
        onea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS E_POS A_POS>;
            bindings = <ONEA>;
        };
        oner { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS E_POS R_POS>;
            bindings = <ONER>;
        };
        onmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS M_POS P_POS>;
            bindings = <ONMP>;
        };
        onma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS M_POS A_POS>;
            bindings = <ONMA>;
        };
        onmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS M_POS R_POS>;
            bindings = <ONMR>;
        };
        onpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS P_POS A_POS>;
            bindings = <ONPA>;
        };
        onpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS P_POS R_POS>;
            bindings = <ONPR>;
        };
        onar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS A_POS R_POS>;
            bindings = <ONAR>;
        };
        oemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS E_POS M_POS P_POS>;
            bindings = <OEMP>;
        };
        oema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS E_POS M_POS A_POS>;
            bindings = <OEMA>;
        };
        oemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS E_POS M_POS R_POS>;
            bindings = <OEMR>;
        };
        oepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS E_POS P_POS A_POS>;
            bindings = <OEPA>;
        };
        oepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS E_POS P_POS R_POS>;
            bindings = <OEPR>;
        };
        oear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS E_POS A_POS R_POS>;
            bindings = <OEAR>;
        };
        ompa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS M_POS P_POS A_POS>;
            bindings = <OMPA>;
        };
        ompr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS M_POS P_POS R_POS>;
            bindings = <OMPR>;
        };
        omar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS M_POS A_POS R_POS>;
            bindings = <OMAR>;
        };
        opar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS P_POS A_POS R_POS>;
            bindings = <OPAR>;
        };
        cnem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS E_POS M_POS>;
            bindings = <CNEM>;
        };
        cnep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS E_POS P_POS>;
            bindings = <CNEP>;
        };
        cnea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS E_POS A_POS>;
            bindings = <CNEA>;
        };
        cner { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS E_POS R_POS>;
            bindings = <CNER>;
        };
        cnmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS M_POS P_POS>;
            bindings = <CNMP>;
        };
        cnma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS M_POS A_POS>;
            bindings = <CNMA>;
        };
        cnmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS M_POS R_POS>;
            bindings = <CNMR>;
        };
        cnpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS P_POS A_POS>;
            bindings = <CNPA>;
        };
        cnpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS P_POS R_POS>;
            bindings = <CNPR>;
        };
        cnar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS A_POS R_POS>;
            bindings = <CNAR>;
        };
        cemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS E_POS M_POS P_POS>;
            bindings = <CEMP>;
        };
        cema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS E_POS M_POS A_POS>;
            bindings = <CEMA>;
        };
        cemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS E_POS M_POS R_POS>;
            bindings = <CEMR>;
        };
        cepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS E_POS P_POS A_POS>;
            bindings = <CEPA>;
        };
        cepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS E_POS P_POS R_POS>;
            bindings = <CEPR>;
        };
        cear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS E_POS A_POS R_POS>;
            bindings = <CEAR>;
        };
        cmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS M_POS P_POS A_POS>;
            bindings = <CMPA>;
        };
        cmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS M_POS P_POS R_POS>;
            bindings = <CMPR>;
        };
        cmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS M_POS A_POS R_POS>;
            bindings = <CMAR>;
        };
        cpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS P_POS A_POS R_POS>;
            bindings = <CPAR>;
        };
        nemp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS E_POS M_POS P_POS>;
            bindings = <NEMP>;
        };
        nema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS E_POS M_POS A_POS>;
            bindings = <NEMA>;
        };
        nemr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS E_POS M_POS R_POS>;
            bindings = <NEMR>;
        };
        nepa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS E_POS P_POS A_POS>;
            bindings = <NEPA>;
        };
        nepr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS E_POS P_POS R_POS>;
            bindings = <NEPR>;
        };
        near { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS E_POS A_POS R_POS>;
            bindings = <NEAR>;
        };
        nmpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS M_POS P_POS A_POS>;
            bindings = <NMPA>;
        };
        nmpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS M_POS P_POS R_POS>;
            bindings = <NMPR>;
        };
        nmar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS M_POS A_POS R_POS>;
            bindings = <NMAR>;
        };
        npar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS P_POS A_POS R_POS>;
            bindings = <NPAR>;
        };
        empa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <E_POS M_POS P_POS A_POS>;
            bindings = <EMPA>;
        };
        empr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <E_POS M_POS P_POS R_POS>;
            bindings = <EMPR>;
        };
        emar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <E_POS M_POS A_POS R_POS>;
            bindings = <EMAR>;
        };
        epar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <E_POS P_POS A_POS R_POS>;
            bindings = <EPAR>;
        };
        mpar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <M_POS P_POS A_POS R_POS>;
            bindings = <MPAR>;
        };

        /* ❖ 3-key combos (global) */
        vso { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS O_POS>;
            bindings = <VSO>;
        };
        vsc { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS C_POS>;
            bindings = <VSC>;
        };
        vsn { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS N_POS>;
            bindings = <VSN>;
        };
        vse { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS E_POS>;
            bindings = <VSE>;
        };
        vsm { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS M_POS>;
            bindings = <VSM>;
        };
        vsp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS P_POS>;
            bindings = <VSP>;
        };
        vsa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS A_POS>;
            bindings = <VSA>;
        };
        vsr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS R_POS>;
            bindings = <VSR>;
        };
        voc { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS C_POS>;
            bindings = <VOC>;
        };
        von { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS N_POS>;
            bindings = <VON>;
        };
        voe { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS E_POS>;
            bindings = <VOE>;
        };
        vom { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS M_POS>;
            bindings = <VOM>;
        };
        vop { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS P_POS>;
            bindings = <VOP>;
        };
        voa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS A_POS>;
            bindings = <VOA>;
        };
        vor { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS R_POS>;
            bindings = <VOR>;
        };
        vcn { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS N_POS>;
            bindings = <VCN>;
        };
        vce { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS E_POS>;
            bindings = <VCE>;
        };
        vcm { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS M_POS>;
            bindings = <VCM>;
        };
        vcp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS P_POS>;
            bindings = <VCP>;
        };
        vca { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS A_POS>;
            bindings = <VCA>;
        };
        vcr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS R_POS>;
            bindings = <VCR>;
        };
        vne { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS E_POS>;
            bindings = <VNE>;
        };
        vnm { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS M_POS>;
            bindings = <VNM>;
        };
        vnp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS P_POS>;
            bindings = <VNP>;
        };
        vna { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS A_POS>;
            bindings = <VNA>;
        };
        vnr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS R_POS>;
            bindings = <VNR>;
        };
        vem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS E_POS M_POS>;
            bindings = <VEM>;
        };
        vep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS E_POS P_POS>;
            bindings = <VEP>;
        };
        vea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS E_POS A_POS>;
            bindings = <VEA>;
        };
        ver { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS E_POS R_POS>;
            bindings = <VER>;
        };
        vmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS M_POS P_POS>;
            bindings = <VMP>;
        };
        vma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS M_POS A_POS>;
            bindings = <VMA>;
        };
        vmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS M_POS R_POS>;
            bindings = <VMR>;
        };
        vpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS P_POS A_POS>;
            bindings = <VPA>;
        };
        vpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS P_POS R_POS>;
            bindings = <VPR>;
        };
        var { \
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS A_POS R_POS>;
            bindings = <VAR>;
        };
        soc { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS C_POS>;
            bindings = <SOC>;
        };
        son { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS N_POS>;
            bindings = <SON>;
        };
        soe { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS E_POS>;
            bindings = <SOE>;
        };
        som { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS M_POS>;
            bindings = <SOM>;
        };
        sop { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS P_POS>;
            bindings = <SOP>;
        };
        soa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS A_POS>;
            bindings = <SOA>;
        };
        sor { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS R_POS>;
            bindings = <SOR>;
        };
        scn { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS N_POS>;
            bindings = <SCN>;
        };
        sce { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS E_POS>;
            bindings = <SCE>;
        };
        scm { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS M_POS>;
            bindings = <SCM>;
        };
        scp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS P_POS>;
            bindings = <SCP>;
        };
        sca { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS A_POS>;
            bindings = <SCA>;
        };
        scr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS R_POS>;
            bindings = <SCR>;
        };
        sne { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS E_POS>;
            bindings = <SNE>;
        };
        snm { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS M_POS>;
            bindings = <SNM>;
        };
        snp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS P_POS>;
            bindings = <SNP>;
        };
        sna { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS A_POS>;
            bindings = <SNA>;
        };
        snr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS R_POS>;
            bindings = <SNR>;
        };
        sem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS E_POS M_POS>;
            bindings = <SEM>;
        };
        sep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS E_POS P_POS>;
            bindings = <SEP>;
        };
        sea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS E_POS A_POS>;
            bindings = <SEA>;
        };
        ser { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS E_POS R_POS>;
            bindings = <SER>;
        };
        smp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS M_POS P_POS>;
            bindings = <SMP>;
        };
        sma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS M_POS A_POS>;
            bindings = <SMA>;
        };
        smr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS M_POS R_POS>;
            bindings = <SMR>;
        };
        spa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS P_POS A_POS>;
            bindings = <SPA>;
        };
        spr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS P_POS R_POS>;
            bindings = <SPR>;
        };
        sar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS A_POS R_POS>;
            bindings = <SAR>;
        };
        ocn { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS N_POS>;
            bindings = <OCN>;
        };
        oce { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS E_POS>;
            bindings = <OCE>;
        };
        ocm { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS M_POS>;
            bindings = <OCM>;
        };
        ocp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS P_POS>;
            bindings = <OCP>;
        };
        oca { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS A_POS>;
            bindings = <OCA>;
        };
        ocr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS R_POS>;
            bindings = <OCR>;
        };
        one { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS E_POS>;
            bindings = <ONE>;
        };
        onm { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS M_POS>;
            bindings = <ONM>;
        };
        onp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS P_POS>;
            bindings = <ONP>;
        };
        ona { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS A_POS>;
            bindings = <ONA>;
        };
        onr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS R_POS>;
            bindings = <ONR>;
        };
        oem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS E_POS M_POS>;
            bindings = <OEM>;
        };
        oep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS E_POS P_POS>;
            bindings = <OEP>;
        };
        oea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS E_POS A_POS>;
            bindings = <OEA>;
        };
        oer { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS E_POS R_POS>;
            bindings = <OER>;
        };
        omp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS M_POS P_POS>;
            bindings = <OMP>;
        };
        oma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS M_POS A_POS>;
            bindings = <OMA>;
        };
        omr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS M_POS R_POS>;
            bindings = <OMR>;
        };
        opa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS P_POS A_POS>;
            bindings = <OPA>;
        };
        opr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS P_POS R_POS>;
            bindings = <OPR>;
        };
        oar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS A_POS R_POS>;
            bindings = <OAR>;
        };
        cne { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS E_POS>;
            bindings = <CNE>;
        };
        cnm { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS M_POS>;
            bindings = <CNM>;
        };
        cnp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS P_POS>;
            bindings = <CNP>;
        };
        cna { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS A_POS>;
            bindings = <CNA>;
        };
        cnr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS R_POS>;
            bindings = <CNR>;
        };
        cem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS E_POS M_POS>;
            bindings = <CEM>;
        };
        cep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS E_POS P_POS>;
            bindings = <CEP>;
        };
        cea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS E_POS A_POS>;
            bindings = <CEA>;
        };
        cer { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS E_POS R_POS>;
            bindings = <CER>;
        };
        cmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS M_POS P_POS>;
            bindings = <CMP>;
        };
        cma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS M_POS A_POS>;
            bindings = <CMA>;
        };
        cmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS M_POS R_POS>;
            bindings = <CMR>;
        };
        cpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS P_POS A_POS>;
            bindings = <CPA>;
        };
        cpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS P_POS R_POS>;
            bindings = <CPR>;
        };
        car { \
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS A_POS R_POS>;
            bindings = <CAR>;
        };
        nem { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS E_POS M_POS>;
            bindings = <NEM>;
        };
        nep { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS E_POS P_POS>;
            bindings = <NEP>;
        };
        nea { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS E_POS A_POS>;
            bindings = <NEA>;
        };
        ner { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS E_POS R_POS>;
            bindings = <NER>;
        };
        nmp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS M_POS P_POS>;
            bindings = <NMP>;
        };
        nma { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS M_POS A_POS>;
            bindings = <NMA>;
        };
        nmr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS M_POS R_POS>;
            bindings = <NMR>;
        };
        npa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS P_POS A_POS>;
            bindings = <NPA>;
        };
        npr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS P_POS R_POS>;
            bindings = <NPR>;
        };
        nar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS A_POS R_POS>;
            bindings = <NAR>;
        };
        emp { \
            timeout-ms = <TIMEOUT>;
            key-positions = <E_POS M_POS P_POS>;
            bindings = <EMP>;
        };
        ema { \
            timeout-ms = <TIMEOUT>;
            key-positions = <E_POS M_POS A_POS>;
            bindings = <EMA>;
        };
        emr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <E_POS M_POS R_POS>;
            bindings = <EMR>;
        };
        epa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <E_POS P_POS A_POS>;
            bindings = <EPA>;
        };
        epr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <E_POS P_POS R_POS>;
            bindings = <EPR>;
        };
        ear { \
            timeout-ms = <TIMEOUT>;
            key-positions = <E_POS A_POS R_POS>;
            bindings = <EAR>;
        };
        mpa { \
            timeout-ms = <TIMEOUT>;
            key-positions = <M_POS P_POS A_POS>;
            bindings = <MPA>;
        };
        mpr { \
            timeout-ms = <TIMEOUT>;
            key-positions = <M_POS P_POS R_POS>;
            bindings = <MPR>;
        };
        mar { \
            timeout-ms = <TIMEOUT>;
            key-positions = <M_POS A_POS R_POS>;
            bindings = <MAR>;
        };
        par { \
            timeout-ms = <TIMEOUT>;
            key-positions = <P_POS A_POS R_POS>;
            bindings = <PAR>;
        };

        /* ❖ two-key combos (local) */
        ordinary_vs { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS>;
            bindings = <ORDINARY_VS>;
        };
        dancing_vs { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS S_POS>;
            bindings = <DANCING_VS>;
        };
        ordinary_vo { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS>;
            bindings = <ORDINARY_VO>;
        };
        dancing_vo { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS O_POS>;
            bindings = <DANCING_VO>;
        };
        ordinary_vc { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS>;
            bindings = <ORDINARY_VC>;
        };
        dancing_vc { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS C_POS>;
            bindings = <DANCING_VC>;
        };
        ordinary_vn { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS>;
            bindings = <ORDINARY_VN>;
        };
        dancing_vn { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS N_POS>;
            bindings = <DANCING_VN>;
        };
        ordinary_ve { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS E_POS>;
            bindings = <ORDINARY_VE>;
        };
        dancing_ve { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS E_POS>;
            bindings = <DANCING_VE>;
        };
        ordinary_vm { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS M_POS>;
            bindings = <ORDINARY_VM>;
        };
        dancing_vm { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS M_POS>;
            bindings = <DANCING_VM>;
        };
        ordinary_vp { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS P_POS>;
            bindings = <ORDINARY_VP>;
        };
        dancing_vp { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS P_POS>;
            bindings = <DANCING_VP>;
        };
        ordinary_va { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS A_POS>;
            bindings = <ORDINARY_VA>;
        };
        dancing_va { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS A_POS>;
            bindings = <DANCING_VA>;
        };
        ordinary_vr { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS R_POS>;
            bindings = <ORDINARY_VR>;
        };
        dancing_vr { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <V_POS R_POS>;
            bindings = <DANCING_VR>;
        };
        ordinary_so { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS>;
            bindings = <ORDINARY_SO>;
        };
        dancing_so { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS O_POS>;
            bindings = <DANCING_SO>;
        };
        ordinary_sc { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS>;
            bindings = <ORDINARY_SC>;
        };
        dancing_sc { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS C_POS>;
            bindings = <DANCING_SC>;
        };
        ordinary_sn { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS>;
            bindings = <ORDINARY_SN>;
        };
        dancing_sn { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS N_POS>;
            bindings = <DANCING_SN>;
        };
        ordinary_se { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS E_POS>;
            bindings = <ORDINARY_SE>;
        };
        dancing_se { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS E_POS>;
            bindings = <DANCING_SE>;
        };
        ordinary_sm { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS M_POS>;
            bindings = <ORDINARY_SM>;
        };
        dancing_sm { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS M_POS>;
            bindings = <DANCING_SM>;
        };
        ordinary_sp { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS P_POS>;
            bindings = <ORDINARY_SP>;
        };
        dancing_sp { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS P_POS>;
            bindings = <DANCING_SP>;
        };
        ordinary_sa { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS A_POS>;
            bindings = <ORDINARY_SA>;
        };
        dancing_sa { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS A_POS>;
            bindings = <DANCING_SA>;
        };
        ordinary_sr { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS R_POS>;
            bindings = <ORDINARY_SR>;
        };
        dancing_sr { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <S_POS R_POS>;
            bindings = <DANCING_SR>;
        };
        ordinary_oc { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS>;
            bindings = <ORDINARY_OC>;
        };
        dancing_oc { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS C_POS>;
            bindings = <DANCING_OC>;
        };
        ordinary_on { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS>;
            bindings = <ORDINARY_ON>;
        };
        dancing_on { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS N_POS>;
            bindings = <DANCING_ON>;
        };
        ordinary_oe { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS E_POS>;
            bindings = <ORDINARY_OE>;
        };
        dancing_oe { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS E_POS>;
            bindings = <DANCING_OE>;
        };
        ordinary_om { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS M_POS>;
            bindings = <ORDINARY_OM>;
        };
        dancing_om { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS M_POS>;
            bindings = <DANCING_OM>;
        };
        ordinary_op { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS P_POS>;
            bindings = <ORDINARY_OP>;
        };
        dancing_op { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS P_POS>;
            bindings = <DANCING_OP>;
        };
        ordinary_oa { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS A_POS>;
            bindings = <ORDINARY_OA>;
        };
        dancing_oa { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS A_POS>;
            bindings = <DANCING_OA>;
        };
        ordinary_or { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS R_POS>;
            bindings = <ORDINARY_OR>;
        };
        dancing_or { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <O_POS R_POS>;
            bindings = <DANCING_OR>;
        };
        ordinary_cn { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS>;
            bindings = <ORDINARY_CN>;
        };
        dancing_cn { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS N_POS>;
            bindings = <DANCING_CN>;
        };
        ordinary_ce { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS E_POS>;
            bindings = <ORDINARY_CE>;
        };
        dancing_ce { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS E_POS>;
            bindings = <DANCING_CE>;
        };
        ordinary_cm { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS M_POS>;
            bindings = <ORDINARY_CM>;
        };
        dancing_cm { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS M_POS>;
            bindings = <DANCING_CM>;
        };
        ordinary_cp { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS P_POS>;
            bindings = <ORDINARY_CP>;
        };
        dancing_cp { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS P_POS>;
            bindings = <DANCING_CP>;
        };
        ordinary_ca { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS A_POS>;
            bindings = <ORDINARY_CA>;
        };
        dancing_ca { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS A_POS>;
            bindings = <DANCING_CA>;
        };
        ordinary_cr { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS R_POS>;
            bindings = <ORDINARY_CR>;
        };
        dancing_cr { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <C_POS R_POS>;
            bindings = <DANCING_CR>;
        };
        ordinary_ne { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS E_POS>;
            bindings = <ORDINARY_NE>;
        };
        dancing_ne { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS E_POS>;
            bindings = <DANCING_NE>;
        };
        ordinary_nm { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS M_POS>;
            bindings = <ORDINARY_NM>;
        };
        dancing_nm { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS M_POS>;
            bindings = <DANCING_NM>;
        };
        ordinary_np { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS P_POS>;
            bindings = <ORDINARY_NP>;
        };
        dancing_np { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS P_POS>;
            bindings = <DANCING_NP>;
        };
        ordinary_na { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS A_POS>;
            bindings = <ORDINARY_NA>;
        };
        dancing_na { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS A_POS>;
            bindings = <DANCING_NA>;
        };
        ordinary_nr { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS R_POS>;
            bindings = <ORDINARY_NR>;
        };
        dancing_nr { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <N_POS R_POS>;
            bindings = <DANCING_NR>;
        };
        ordinary_em { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <E_POS M_POS>;
            bindings = <ORDINARY_EM>;
        };
        dancing_em { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <E_POS M_POS>;
            bindings = <DANCING_EM>;
        };
        ordinary_ep { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <E_POS P_POS>;
            bindings = <ORDINARY_EP>;
        };
        dancing_ep { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <E_POS P_POS>;
            bindings = <DANCING_EP>;
        };
        ordinary_ea { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <E_POS A_POS>;
            bindings = <ORDINARY_EA>;
        };
        dancing_ea { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <E_POS A_POS>;
            bindings = <DANCING_EA>;
        };
        ordinary_er { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <E_POS R_POS>;
            bindings = <ORDINARY_ER>;
        };
        dancing_er { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <E_POS R_POS>;
            bindings = <DANCING_ER>;
        };
        ordinary_mp { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <M_POS P_POS>;
            bindings = <ORDINARY_MP>;
        };
        dancing_mp { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <M_POS P_POS>;
            bindings = <DANCING_MP>;
        };
        ordinary_ma { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <M_POS A_POS>;
            bindings = <ORDINARY_MA>;
        };
        dancing_ma { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <M_POS A_POS>;
            bindings = <DANCING_MA>;
        };
        ordinary_mr { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <M_POS R_POS>;
            bindings = <ORDINARY_MR>;
        };
        dancing_mr { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <M_POS R_POS>;
            bindings = <DANCING_MR>;
        };
        ordinary_pa { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <P_POS A_POS>;
            bindings = <ORDINARY_PA>;
        };
        dancing_pa { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <P_POS A_POS>;
            bindings = <DANCING_PA>;
        };
        ordinary_pr { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <P_POS R_POS>;
            bindings = <ORDINARY_PR>;
        };
        dancing_pr { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <P_POS R_POS>;
            bindings = <DANCING_PR>;
        };
        ordinary_ar { \
            layers = <0>;
            timeout-ms = <TIMEOUT>;
            key-positions = <A_POS R_POS>;
            bindings = <ORDINARY_AR>;
        };
        dancing_ar { \
            layers = <1>;
            timeout-ms = <TIMEOUT>;
            key-positions = <A_POS R_POS>;
            bindings = <DANCING_AR>;
        };

    };

    sequences {
        compatible = "zmk,key-sequences";

        spc_012 {
            key-positions = <R_POS A_POS P_POS M_POS>;
            timeout-ms = <300>;
            bindings = <TYPE_B>;
        };
  };
};
